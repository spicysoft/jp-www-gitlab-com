---
layout: handbook-page-toc
title: "Reliability Engineering - How We Work: Issue Management and Prioritization Process"
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

## Overview

All requests for work to the Reliability Team come through the [Reliability Issue Tracker](https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/new?issuable_template=default).  The management of this queue is an ongoing maintenance task for Reliability Engineers and Managers.  This page contains an overview of the criteria used in determining how work is triaged and prioritized.

## Issue Priority

Priority for incoming work is based on a matrix measuring the **impact** and **urgency** of an issue.

![priority_matrix](img/priority_matrix.png)

### Impact

Impact is the measure of the effect of an incident, problem, or change on business processes as detailed in the issue.

The table below can be used as a general guide for determining impact:

| Impact | Description |
| -------- | ----------- |
| High | -The issue needs to be resolved to mitigate an active S1 or S2 incident <br> -The issue is a roadblock on GitLab.com and blocking customer's business goals and day to day workflow <br> -The damage to the reputation of the business is likely to be high. <br> -Deploys are blocked as a result <br> -The potential financial impact is high|
| Medium | -The issue is impacting a moderate subset of employees or a small subset of customers <br> -The damage to the reputation of the business is not likely to be high.<br> - The potential financial impact is low but greater than 0 |
| Low | -The issue is impacting a small subset of employees <br> -There is no impact on customers <br> -There is no risk to the reputation of the business <br> -There is no financial impact|

### Urgency

Urgency is the speed at which an issues should be resolved based on business need or expectation.

The table below can be used as a general guide for determining impact:

| Urgency | Description |
| -------- | ----------- |
| High | -The impact increases rapidly over time. <br> -Damage to the reputation of the business will increase over time. <br> -Any roadblock that puts the guaranteed self-managed release date at risk <br> -A minor incident could be prevented from becoming a major incident by acting immediately. <br> -A member of senior leadership has requested urgency|
| Medium | -The impact increases only slightly over time. <br> -The damage to the reputation of the business will not increase over time. <br> -The customer has requested urgency.|
| Low | -The impact does not increase at all over time. <br> -The customer indicates that the issue is not urgent.|

### Priority

Once the impact and urgency of an issue has been determined, it is time to assign a priority.

The table below can be used as a general guide for assigning priority:

| Priority | Impact/Urgency | Action |
| -------- | ---------- | --------- |
| `~Reliability::P1` | Impact: High <br> Urgency: High | -A resource is assigned as soon as possible.  <br> Issue is handed off between regions until it is resolved or mitigated to the point that priority can be lowered. |
| `~Reliability::P2` |  Impact: High <br> Urgency: Medium <br> **or** <br> Impact: Medium <br> Urgency: High   | -Issue is prioritized above P3s and P4s <br> -Issue is worked on but is **not** handed off between regions <br> -If an engineer is changing roles before they are able to resolve the issue, it should be handed over/assigned to another resource. |
| `~Reliability::P3` | Impact: High <br> Urgency: Low <br> **or** <br> Impact: Low Urgency: High <br> **or** <br> Impact: Medium Urgency: Medium | -Issue is prioritized above P4s only <br> -If an engineer is changing roles before they are able to resolve the issue, the issue should be dropped back into the tracker with a summary of what has been done so far and what the next steps are.|
| `~Reliability::P4` | Impact: Low <br> Urgency: Medium <br> **or** <br> Impact: Medium <br> Urgency: Low | -Resources are not assigned until all higher priority work has been completed|
| `~Reliability::P5` | Impact: Low <br> Urgency: Low | -If an issue is determined to be a P5, there is a question on if the issue should be done at all.  If it turns out something was missed it can be moved to a higher priority.  Otherwise it should be closed with an explanatory note. |

Except for corrective actions and security issues, reliability does not use `~"priority"` or `~"severity"` labels, if these labels are added they will be removed.
{: .alert .alert-info}

## Classifying work

In analyzing incoming work we need to determine if the work belongs to one of the following classifications, by default all incoming work will be put into the `work::general` category until it has been classified.

### General

Any issue that doesn't belong to a larger project and is able to be completed in 5 days should be considered a general issue.  General issues are smaller and are worked on by individuals as opposed to project squads.  General issues are labeled as `work::general`.

### Incident

Incident related work will be labeled as `work::incident`. Investigation work is normally completed by the EOC during or shortly after their shift ends.
Corrective actions follow the [corrective action process](/handbook/engineering/infrastructure/team/reliability/#how-we-work--corrective-actions-workflow) and will also have the `work::incident` label.

### Project

Any issue that is associated with a larger effort that will take longer than 5 days is considered a project.  Once an issue is determined to be a project vs a general work item, it will need to be prioritized within the already existing backlog of projects.  Project issues are labeled as `work::project`

### Corrective Actions and Security issues

Corrective actions and security issues labeled as `~"corrective action"` or `~"security"` are labeled differently in the Reliability issue tracker.
For these issues, `severity::*` labels are set to meet specific SLOs.

- For security issue see the [Time to resolve table by severity](/handbook/engineering/security/#severity-and-priority-labels-on-security-issues)
- For corrective actions see [SLOs set by the Quality department](/handbook/engineering/quality/issue-triage/#severity-slos)

For issues labeled with `~"security"` and `~"corrective action"` we do not use the `~"priority::*"` labels, if added they will be removed. Please use the `Reliability::P*` labels instead.
{: .alert .alert-info}

### Labels

#### Workflow Labels

Issues should always fall in to one of the following states, as defined by the following labels:

1. `workflow-infra::Triage` - Applied to all new Reliability issues automatically.  It indicates that the issue has not yet been reviewed by the team.
2. `workflow-infra::Proposal` - Applied to any issues that require discussion, input or review.  Some examples include:
  - [Readiness Reviews](https://about.gitlab.com/handbook/engineering/infrastructure/production/readiness/)
  - Issues that exist specifically to document a conversation
   - Example: [Discussion: Should we recreate our zonal/regional clusters differently](https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/15192)
  - Issues that discuss possible courses of action and are looking to solicit input from the greater Reliability team.
3. `workflow-infra::Ready` - Applied after the issues has been triaged by an SRE or Engineering Manager within the Reliability Team.  Ensure the following questions are answered and labeled before marking an issue as `workflow-infra::Ready`:
  - Is this issue a Project or a General issue?
      - Apply `work::general` if the issue can reasonably be completed by a single SRE in less than 5 days.  Apply `work::project` for anything that would take longer.
  - What is the priority of the issue as defined by the [prioritization matrix](https://about.gitlab.com/handbook/engineering/infrastructure/team/reliability/issues.html#issue-priority)?
      - `~Reliability::P1`, `~Reliability::P2`, `~Reliability::P3`, `~Reliability::P4`, or `~Reliability::P5` based on the prioritization matrix.
4. `workflow-infra::In Progress` - This label should be applied _only_ after the issue has a Reliability Team member as an assignee.  This label is meant to represent only work that is actively in progress and not to indicate that an issue will be worked on in the future.
5. `workflow-infra::Done` - This label is applied only when the issue has been closed.

#### T-shirt Labels
T-shirt labels are used to estimate the size of issues.  These are always a rough estimate and often need to be adjusted once the full scope of an issue is defined.

| Label | Estimated Time Requirement | Example |
| -------- | --------- | --------- |
| `tShirt-size::XS` | 4 hours or less | TBD |
| `tShirt-size::S` | 1 day or less| TBD |
| `tShirt-size::M` | 1 week or less | TBD |
| `tShirt-size::L` | 1 month or less | TBD |
| `tShirt-size::XL` | More than 1 month | TBD |

#### Other Labels

 - `unblocks others` - Apply this label to all issues that originate outside of the [Infrastructure Department](https://about.gitlab.com/handbook/engineering/infrastructure/)

## Issue Board

The [issue board for Reliability](https://gitlab.com/gitlab-com/gl-infra/reliability/-/boards/3993753) is reviewed twice a week by Reliability Leadership Team.  If you have an urgent issue that you believe should be prioritized ahead of other work, please reach out to any Engineering Manager on the Reliability Team to discuss.

### General Board Guidelines
 - Issues should be prioritized by their priority label first
 - When faced with  multiple issues of the same priority level:
   - prioritize small issues ahead of large ones.
   - prioritize older issues over new.

## Issue Triage: Step-by-step
1. Locate issues that need to be triaged using [this view](https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues?sort=updated_desc&state=opened&label_name[]=workflow-infra::Triage) which shows `workflow-infra::Triage` tickets lists most recently updated issues first.
2. Choose the first issue in the list and ask the following questions:
    1. Can the issue be potentially be completed by a single SRE in less than 5 working days?  If so, add the `work::general` label.  If the scope of work is larger add the `work::project` label.
    2. What is the priority of the issue?  Read the issue and assign a priority as defined by [our process](https://about.gitlab.com/handbook/engineering/infrastructure/team/reliability/issues.html#issue-priority).  Once priority has been determined, add the appropriate [priority label](https://about.gitlab.com/handbook/engineering/infrastructure/team/reliability/issues.html#priority).  NOTE: Prioritized issues are reviewed by Reliability Leadership multiple times a week, so it is OK if an issue is prioritized incorrectly.
3. Add the `workflow-infra::Ready` label.  This indicates that the issue has been through the prioritization process and is ready to be looked at by an engineer.
4. Return the `workflow-infra::Triage` [list view](https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues?sort=updated_desc&state=opened&label_name[]=workflow-infra::Triage), select the next issue in the list and put it through the same process.

## Capacity Planning Warnings
Capacity planning warning issues are generated by the Scalability team and indicate concerns that we should address before they cause an alert (or an outage!).  These issues are tracked outside of the [Reliability project](https://gitlab.com/gitlab-com/gl-infra/reliability) in the [capacity planning project](https://gitlab.com/gitlab-com/gl-infra/capacity-planning/).  The list of issues having the ~team::Reliability label is reviewed once per quarter and the work is then assigned based on impact and urgency.

 * [Current Reliability Capacity Planning Warning Issues](https://gitlab.com/gitlab-com/gl-infra/capacity-planning/-/issues/?label_name%5B%5D=team%3A%3AReliability)
