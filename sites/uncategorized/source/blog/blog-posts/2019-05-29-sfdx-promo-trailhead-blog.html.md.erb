---
title: "Salesforce developers can now use GitLab's single application for the DevOps lifecycle"
author: Mayank Tahilramani
author_gitlab: mayanktahil
author_twitter: mayanktahil
categories: company
image_title: '/images/blogimages/gitlab-salesforce.png'
description: "Learn what’s possible with GitLab and Salesforce, whether you’re looking to reduce cycle time or increase collaboration across cross-functional teams."
tags: DevOps, integrations, news
cta_button_text: 'Sign up for 30 days free!'
cta_button_link: '/free-trial/'
twitter_text: ".@salesforce developers can now use @gitLab #DevOps. Learn how."
postType: product
---

Great news – we're partnering with Salesforce to offer developers more [agile delivery practices](/solutions/agile-delivery/) and [increased automation](/stages-devops-lifecycle/auto-devops/) throughout the DevOps lifecycle. Developers can leverage the following capabilities from GitLab for Salesforce DX: [Source Code Management (SCM)](/stages-devops-lifecycle/source-code-management/, [Continuous Integration (CI) and Continuous Delivery (CD)](/stages-devops-lifecycle/continuous-integration/), [Project Management](https://about.gitlab.com/product/project-management/), and [much more](/features/). Many businesses already run on Salesforce and are just starting to explore the latest and greatest that Salesforce DX has to offer in terms of tooling and functionality to rapidly build apps and enhancements onto their platform. Our partnership with Salesforce will help our customers to reduce cycle times and [deliver business value at the speed of business](/blog/2019/04/23/align-business-strategy-and-app-delivery/).

## How GitLab + Salesforce DX work together

Salesforce has been investing in APIs and platform features that allow developers to create and administer Salesforce-connected apps in a more direct and efficient way. With GitLab, developers can now supplement Salesforce development tools through a [templatized CI/CD pipeline](https://gitlab.com/sfdx/sfdx-cicd-template) which leverages [Scratch Orgs](https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs.htm) and [packaging](https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_dev2gp_plan_pkg_types.htm) for a structured and frictionless development experience. It’s easier than ever to get started with new Salesforce projects using our new [Salesforce project template](https://gitlab.com/sfdx/sfdx-project-template), and adopt a collaborative development workflow across teams.

For example, Salesforce development projects stored in GitLab SCM enable developers to work in a Git-based workflow similar to [GitLab Flow](https://docs.gitlab.com/ee/topics/gitlab_flow.html), while transparently collaborating through [issue tracking](https://docs.gitlab.com/ee/user/project/issues/) and [merge requests](https://docs.gitlab.com/ee/user/project/merge_requests/). In this case, each developer can seamlessly create an ad hoc Git branch focused on specific development and functionality of code, allowing for small but continuous incremental changes. Each commit within a branch goes through automated testing and deployment into a Scratch Org.

Upon approval, the changes are then packaged and deployed into a Sandbox Org and, ultimately, into production. GitLab CI/CD aims to automate the use of packaging for predictable Salesforce deployments. In this workflow example, each developer is able to leverage short-lived Scratch Orgs for development and testing of code in a much more Agile fashion.

![Tanuki Badge](/images/blogimages/gitlab-salesforce-tanuki-badge.png){: .small.right.wrap-text}

## Get hands on with a new Trailhead module and promo

Learning by doing is the best way to get started. Check out our new Trailhead Module, "[Build an automated CI/CD pipeline with GitLab](https://trailhead.salesforce.com/content/learn/projects/automate-cicd-with-gitlab)" and learn how to automate your Salesforce development to increase productivity. Earn your Salesforce/GitLab Tanuki badge today!

[Get started now.](/free-trial/)
{: .alert .alert-gitlab-purple .text-center}
