---
title: "How do developers and managers feel about their jobs?"
author: Emily von Hoffmann
author_gitlab: evhoffmann
author_twitter: emvonhoffmann
categories: insights
image_title: '/images/blogimages/managers-more-optimistic-than-developers.jpg'
description: "How do you assess job satisfaction? Here's a look inside the findings and methods of our Global Developer Report."
ee_cta: false
cta_button_text: 'See the report'
cta_button_link: '/developer-survey/2018'
tags: developer survey, careers, DevOps
---
_Our [2022 Global DevSecOps Survey](/developer-survey/) is out now! Learn the latest in DevOps insights from over 5,000 DevOps professionals._

One of the goals of our [2018 developer survey](/developer-survey/previous/2018/) was to establish a benchmark for how satisfied software professionals generally are in their jobs. Using the detailed demographic information we captured at the beginning, we were able to sort and compare the opinions of different groups within our sample of over 5,000 respondents. One of our key findings was that, for all their differences, developers and managers agree with each other on a lot of things, but managers tend to have a slightly rosier outlook when their views diverge.

<!-- more -->

### How we determined overall satisfaction

Surveys are tricky, and humans are trickier, so we had to brainstorm a bit on what exactly we were interested in learning, and [how](http://www.pewresearch.org/methodology/u-s-survey-research/questionnaire-design/) we could coax out this information without introducing our own biases. We used a series of [likert scales](https://www.surveymonkey.com/mp/likert-scale/) to get at these groups’ perceptions of their autonomy, team dynamics, support, and other fuzzy things that we think can really drive happiness in a role (we also asked about details on tooling and workflow [later on](/developer-survey/previous/2018/) in the survey). We’ve [published before](https://medium.com/@gitlab/invite-your-engineers-to-talk-business-heres-why-485ce02c4d18) on what happens when your business and engineering teams are out of sync, and we wanted to ask about other symptoms of that same problem. Here are some of the questions, along with the raw data that we used to compare satisfaction between developers and management.

<style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}
.tg .tg-9hbo{font-weight:bold;vertical-align:top}
.tg .tg-yw4l{vertical-align:top}
</style>
<table class="tg">
  <tr>
    <th class="tg-9hbo">Managers</th>
    <th class="tg-9hbo">%</th>
    <th class="tg-9hbo">Developers</th>
    <th class="tg-9hbo">%</th>
  </tr>
  <tr>
    <td class="tg-yw4l">My team is set up to succeed</td>
    <td class="tg-yw4l">84</td>
    <td class="tg-yw4l">I feel set up to succeed</td>
    <td class="tg-yw4l">75</td>
  </tr>
  <tr>
    <td class="tg-yw4l">My team is given realistic deadlines</td>
    <td class="tg-yw4l">68</td>
    <td class="tg-yw4l">I’m given realistic deadlines</td>
    <td class="tg-yw4l">65</td>
  </tr>
  <tr>
    <td class="tg-yw4l">Project expectations are set up front</td>
    <td class="tg-yw4l">60</td>
    <td class="tg-yw4l">Project expectations are set up front</td>
    <td class="tg-yw4l">50</td>
  </tr>
  <tr>
    <td class="tg-yw4l">My team rarely needs to sacrifice quality to meet a deadline</td>
    <td class="tg-yw4l">53</td>
    <td class="tg-yw4l">I rarely need to sacrifice quality to meet a deadline</td>
    <td class="tg-yw4l">50</td>
  </tr>
  <tr>
    <td class="tg-yw4l">My team is able to make decisions about their work</td>
    <td class="tg-yw4l">91</td>
    <td class="tg-yw4l">It’s important to me to be able to make decisions about my work</td>
    <td class="tg-yw4l">96</td>
  </tr>
  <tr>
    <td class="tg-yw4l">My team has the authority to make decisions</td>
    <td class="tg-yw4l">88</td>
    <td class="tg-yw4l">I have the authority to make decisions about my work</td>
    <td class="tg-yw4l">83</td>
  </tr>
  <tr>
    <td class="tg-yw4l">My team's ideas and opinions are valued</td>
    <td class="tg-yw4l">93</td>
    <td class="tg-yw4l">My ideas and opinions are valued</td>
    <td class="tg-yw4l">84</td>
  </tr>
  <tr>
    <td class="tg-yw4l">My team has access to the best development tools</td>
    <td class="tg-yw4l">81</td>
    <td class="tg-yw4l">I have access to the best development tools</td>
    <td class="tg-yw4l">74</td>
  </tr>
</table>


### Tying individual attitudes to culture

What are some other things that might contribute to a frustrating or dysfunctional culture? To try to hint at big, sometimes implicit things like psychological safety, bureaucracy, and whether their team is more democratic or autocratic, we had to come up with a list of concrete indicators, which you can see below:

<center><img src="/images/blogimages/biggest-challenges-chart.png" alt="biggest challenges to adopting new tools and practices" class= "shadow" style="width: 700px;"/></center>

When we asked about the biggest challenges teams face when adopting new processes or tools, the top three responses were replacing ingrained practices, resistance to change, and cross-team communication. Developers and managers are in agreement here almost exactly, although developers are slightly more likely to name resistance to chance (51 percent) than managers (46 percent).

We saw this echoed in other ways, with the greatest number of developers (42 percent) naming unclear direction as their top challenge to getting work done. Relatedly, just 57 percent of developers say they have visibility into what their team members in operations, security, and product are working on. Managers feel slightly better off in this regard, with 69 percent reporting that they have visibility (we also found some differences in how remote versus in-office teams view the issue, which you can read more about [here](/developer-survey/previous/2018/)).

### What we want to learn next

Communication, and structures or habits that might enable or impede it, is a theme that we’re interested in learning more about. It’s a predictable problem with no easy fix, so we ran a Twitter poll to get some input on how teams have wrestled with communication issues in the past.

One suggestion for how to overcome the cultural barriers to adopting DevOps is to embed team members to improve cross-team collaboration, but that doesn’t always seem doable because it’s an organizational change, requiring buy-in from many more people than just the developers involved. It wasn’t surprising, then, that this option was chosen the least. Regular social activities and working sessions seem like much cheaper options, but were barely more popular. The greatest number of people simply chose our equivalent of ¯\\\_(ツ)_/¯.

<div class="center">

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">We heard from developers that miscommunication is a major challenge to getting work done <a href="https://t.co/Cvqwnf5tVH">https://t.co/Cvqwnf5tVH</a>. <br><br>What&#39;s the best way to improve communication issues between teams in your engineering organization?</p>&mdash; GitLab (@gitlab) <a href="https://twitter.com/gitlab/status/973648916536205312?ref_src=twsrc%5Etfw">March 13, 2018</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

</div>

We heard from a few devs about solutions that didn’t make our short list, and they’re rarely about just talking to each other more. Tellingly, the responses we got were much more likely tying communication to big, pervasive cultural things, like compensation incentives and respect for others’ work.

<div class="center">

<blockquote class="twitter-tweet" data-conversation="none" data-lang="en"><p lang="en" dir="ltr">Mutual respect and interest in the work of others. Especially between different but collaborating professions like design and development but also within a group of the same type.</p>&mdash; ᴄɪᴛɪᴢᴇɴ ᴅʀᴀɪɴ (@Citizen_Drain) <a href="https://twitter.com/Citizen_Drain/status/973671170808696832?ref_src=twsrc%5Etfw">March 13, 2018</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

</div>

<div class="center">

<blockquote class="twitter-tweet" data-conversation="none" data-lang="en"><p lang="en" dir="ltr">Writing documentation, and planning. Old skool and works.</p>&mdash; Peter Bowyer (@peterbowyer) <a href="https://twitter.com/peterbowyer/status/973650507930664966?ref_src=twsrc%5Etfw">March 13, 2018</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

</div>

When we [asked](https://twitter.com/gitlab/status/974023284953006080) Netflix engineer Randall Koutnik for more details on his tweet (below) he [wrote a post](https://rkoutnik.com/2018/03/17/incentivize-teams-not-people.html) with examples of how dev teams can be undermined by policies tying financial incentives and promotion criteria to individual performance goals, rather than company performance.

<div class="center">

<blockquote class="twitter-tweet" data-conversation="none" data-lang="en"><p lang="en" dir="ltr">Too many companies financially incentivize against teamwork. If my bonus is determined by me hitting my objectives, then it&#39;s counterproductive to help others instead of focusing in on my own work.</p>&mdash; Randall Koutnik (@rkoutnik) <a href="https://twitter.com/rkoutnik/status/973689841870229507?ref_src=twsrc%5Etfw">March 13, 2018</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

</div>

Why is this predictable problem so stubborn? What has your team tried? Tweet us [@gitlab](https://twitter.com/gitlab).

Photo by [Dylan Gillis](https://unsplash.com/photos/KdeqA3aTnBY) on [Unsplash](https://unsplash.com/)
{: .note}
