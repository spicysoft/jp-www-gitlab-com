---
title: "5 Teams that made the switch to GitLab CI/CD"
author: Chrissie Buchanan
author_gitlab: cbuchanan
author_twitter: gitlab
categories: engineering
image_title: '/images/blogimages/ci-cd-competitive-campaign-blog-cover.png'
description: "See what happened when these five teams moved on from old continuous integration and delivery solutions and switched to GitLab CI/CD."
tags: customers, DevOps, CI/CD,
cta_button_text: 'Watch our CI/CD webcast'
cta_button_link: '/webcast/mastering-ci-cd/'
twitter_text: "5 teams that made the switch to @gitlab CI/CD"
postType: content marketing
merch_banner: merch_two
merch_sidebar: merch_two
---

No team is immune to process challenges, and as organizations grow these challenges only get worse. Sometimes there’s a lack of visibility during the development process, sometimes legacy systems create instability and lack functionality, and sometimes things just _stop working_. Continuous integration and delivery [(CI/CD)](/topics/ci-cd/) enables teams to deploy faster, and finding the right tool can make a big difference in the development lifecycle. Great companies know how to identify problems and when it’s time to find better solutions.

We’ve previously shared [why teams love GitLab CI/CD](/blog/2019/04/02/why-gitlab-ci-cd/), and now we want to highlight five real-world examples of teams that abandoned dated continuous integration and delivery solutions and made the switch to GitLab CI/CD. We’ll show you how they:

*   Reduced costs.
*   Deployed faster.
*   Improved efficiency.
*   Made engineers’ lives easier.

### Verizon Connect

The Verizon Connect Telematics Container Cloud Platform team had several challenges: too many tasks, disjointed processes, and outdated, Java-based monolithic applications. Add tools like [BitBucket](/devops-tools/bitbucket-vs-gitlab/), Jenkins, and Jira in the mix and the Verizon Connect team was struggling with _data center builds that took nearly 30 days_. It was time to start from scratch.

The team chose GitLab to support this infrastructure initiative and reduced data center deploys from 30 days to _under eight hours_.

[Read on](/blog/2019/02/14/verizon-customer-story/)
{: .alert .alert-gitlab-purple}


### Ticketmaster

For the Ticketmaster mobile team, a two-hour pipeline for a minor change was the last straw. After years with Jenkins and a system weighed down by plugins and legacy development, they knew they needed to reevaluate their continuous integration and delivery tools.

After adopting GitLab CI/CD, Ticketmaster was able to move to weekly releases, decreasing their pipeline execution time from two hours to _only eight minutes_ to build, test, and publish artifacts.

Learn how GitLab CI/CD gave the mobile team their Friday afternoons back.

[Read more](/blog/2017/06/07/continuous-integration-ticketmaster/)
{: .alert .alert-gitlab-purple}


### HumanGeo

As a software development company, HumanGeo ships a lot of code. Development speed is vital, and when Jenkins CI became yet another thing to manage, they needed to make a change.

Justin Shelton, an engineer at HumanGeo, talks about why they decided to switch to GitLab CI/CD, and how they were able to:

*   Cut admin time by 96 percent.
*   Cut costs by 33 percent.
*   Increase the pace of development.

[Learn how](/blog/2017/11/14/humangeo-switches-jenkins-gitlab-ci/)
{: .alert .alert-gitlab-purple}

### Wag!

In three years, Wag! has supported more than one billion walks through its on-demand dog walking, sitting, and boarding mobile app. The engineering team was searching for a simplified solution that would streamline the development process. The company had been using Travis and other continuous integration and delivery systems but wanted something with a better interface that offered more control.

Wag!'s infrastructure engineers no longer have to manually stage and test their work. They now use the full GitLab CI/CD pipeline – so whether it's the Android application, the web application, the API, or infrastructure, it's all being tested, built, and deployed through GitLab.

[Check it out](/blog/2019/01/16/wag-labs-blog-post/)
{: .alert .alert-gitlab-purple}


### Paessler AG

Paessler AG’s PRTG Network Monitor is used by enterprises and organizations of all sizes and industries across more than 170 countries. It’s critical that their monitoring service is able to keep up with developments but stability issues meant that sometimes things just stopped working.

The Paessler team initially chose GitLab for version control, but after seeing the functionality and potential of GitLab pipelines, they decided to replace Jenkins as well. Since adopting GitLab CI/CD, the Paessler AG team now has 4x more releases and 90 percent of QA self-served.

[Read the case study](/customers/paessler/)
{: .alert .alert-gitlab-purple}

Want to know what GitLab CI/CD could do for your team? You’re invited to join us for our CI/CD webcast, _Mastering continuous software development_. Learn how GitLab’s built-in CI/CD helps teams apply continuous software development without all the complicated integrations and plugin maintenance.

In this webcast, we’ll cover:

* Three main approaches to the continuous software development methodology.
* The benefits of continuous integration, delivery and deployment practices.
* A demonstration of GitLab’s CI/CD pipeline to build, test, deploy, and monitor your code.

{::options parse_block_html="true" /}

<i class="fab fa-gitlab" style="color:rgb(107,79,187); font-size:.85em" aria-hidden="true"></i>&nbsp;&nbsp;
Watch GitLab's [Mastering continuous software development](/webcast/mastering-ci-cd/) webcast
&nbsp;&nbsp;<i class="fab fa-gitlab" style="color:rgb(107,79,187); font-size:.85em" aria-hidden="true"></i>
{: .alert .alert-webcast}

<%= partial "includes/blog/blog-merch-banner" %>

