---
title: Why software developer job satisfaction matters and how to make it happen
author: Valerie Silverthorne
author_gitlab: vsilverthorne
author_twitter: ValSilverthorne
categories: insights
tags: developer survey, DevOps, community
description: Science has proven happier developers are more productive. It’s
  time to take software developer job satisfaction seriously – here’s how the
  right combo of culture and tools, i.e., a DevOps platform, can help.
image_title: /images/blogimages/devsecopssurvey.png
twitter_text: Science tells us happier developers are more productive. Here's
  how a DevOps platform can help.
featured: yes
---
In the midst of a global pandemic and an ongoing worldwide shortage of coders, software developer job satisfaction has never been more important. But to managers, and their teams, happiness can certainly feel elusive, hard-to-measure, and difficult to achieve.

But there’s no question it’s a worthwhile goal, and you don’t have to look further than science for proof of that. Two years ago authors Daniel Graziotin and Fabian Fagerholm [studied more than 1300 developers](https://link.springer.com/chapter/10.1007/978-1-4842-4221-6_10) to rate their happiness, assess factors that make them unhappy, and to see if software developer job satisfaction was truly linked to improved productivity. The duo used the Scale of Positive and Negative Experience (SPANE) and their results were published in [_Rethinking Productivity in Software Engineering_](https://link.springer.com/book/10.1007/978-1-4842-4221-6).

Their findings were surprisingly straightforward: Coders were a "moderately happy" group, as a whole, and were made unhappy by three primary things: being stuck while problem solving, time pressure, and working with bad code or with poor coding processes. A fourth reason related to information overload. "(The)...current software tools may overload developers with information," the study found. The research went on to outline how unhappy developers were less productive, suffered from "broken flow," had less motivation, and produced low quality code. And finally, after two different psychological tests done in labs, the authors were able to declare definitively that "happy software developers are indeed more productive."

## Get happy, but how?

Now that science has validated what we *felt* had to be true all along, it’s time to step back and consider the factors that play into software developer job satisfaction.

A good place to start is with the development process. In our [2021 Global DevSecOps Survey](/developer-survey/), we found almost 36% of respondents said their teams are doing DevOps or DevSecOps, up from 27% in 2020. And there’s a reason why DevOps is so popular: it’s not only most likely to yield better code quality and faster time to market but it also adds to developer job satisfaction. In fact, more than 13% of respondents said [DevOps](/topics/devops/) makes developers  happier or makes their team more attractive to potential new employees.

But one of the realities of DevOps is tools...lots of them. In our survey, 38% of respondents used five tool chains while nearly 28% used between five and 10 (and 56% said there were an average of five tools on each tool chain.) Five tool chains with five tools each means teams are dealing with 25 tools – that’s certainly building a case for information overload and potentially *very unhappy* developers.

_Our [2022 Global DevSecOps Survey](/developer-survey/) is out now! Learn the latest in DevOps insights from over 5,000 DevOps professionals._

## The beauty of less

So if DevOps, streamlined, is the key to software developer job satisfaction, the answer is obvious: Adopting a DevOps platform that brings tools together in a single application for collaboration, visibility, and development velocity makes for happier devs.

Our survey respondents seemed to agree. When we asked about the benefits of a DevOps platform, the answers were clear: Better DevOps overall, improved collaboration, easier automation, and visibility/traceability. Here’s what they said:

_"Reduced mean time to recovery (MTTR), quicker time to market, reduced lead time for fixes, and fewer change failures."_

_"More ownership of everything to do with the product."_

_"Reliability, repeatability, consistency, productivity."_

If it’s time for more efficient DevOps (and of course happier developers), [take our quiz](/quiz/devops-platform/) to understand your level of DevOps platform maturity. And if you want to understand the heavy toll too many tools can take on your team, dive into [how to avoid the DevOps tax](/topics/devops/use-devops-platform-to-avoid-devops-tax/).
