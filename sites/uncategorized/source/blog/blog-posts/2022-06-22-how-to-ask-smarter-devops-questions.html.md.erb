---
title: How to ask smarter DevOps questions
author: Valerie Silverthorne
author_gitlab: vsilverthorne
author_twitter: ValSilverthorne
categories: devops platform
tags: DevOps, culture, collaboration
description: Take your DevOps practice to the next level by asking 10 critical questions.
image_title: /images/blogimages/gl15.jpg
twitter_text: Want faster release times, safer software and happier developers?
  Ask these 10 DevOps questions and then take action
---

GitLab has [surveyed DevOps practitioners](/developer-survey/) for more than five years now. In that time, we have come to know what questions to ask to understand how well teams are doing with DevOps. In sharing these 10 questions, we aim to help you assess your own team’s capabilities and achieve smarter, faster DevOps.

### How fast is your team releasing code today vs. one year ago?

Tracking release speed is like taking the temperature of your DevOps team. You’d like to think everything is going well, but you might be surprised. Occasionally DevOps teams report to us they are actually releasing code more slowly than in the past. 

### What stage(s) in the process are causing the most release delays?

This question will shine a spotlight on the areas in your DevOps practice that simply don’t work. Spoiler alert: The answer [will certainly be testing](/blog/2021/05/06/the-software-testing-life-cycle-in-2021-a-more-upbeat-outlook/), though other things, from planning to code development and code review, might pop up, too.

### How automated is your DevOps process?

Ask this, but don’t just focus on testing, tempting as that might be. Also think about what else in the software development lifecycle would [benefit from automation](/blog/2021/01/22/cd-automated-integrated/). Consider what getting that time back would afford you. Could you assign your developers and ops pros to other business-critical projects?

### What’s been added to your DevOps tech stack over the last year?

It’s good to look back and take inventory of the technology you have in play. This is also data that can help inform what your next steps might be, such as adopting [GitOps](/topics/gitops/), [observability](/blog/2022/06/14/observability-vs-monitoring-in-devops/), or [AI](https://www.youtube.com/watch?v=C08QVI99JLo).

### How are your DevOps roles changing?

If your team is like others we’ve heard from, (big) changes are happening. Devs are picking up tasks that have traditionally been owned by ops, ops is becoming anything from a DevOps coach to a [platform engineer](/topics/devops/what-is-a-devops-platform-engineer/) or a cloud expert, and security is likely now embedded in development teams.

### How does security integrate with DevOps in your organization?

The most successful DevOps teams have figured out how to [bridge the dev and sec divide](/blog/2020/08/13/developer-security-divide/). Whether your team has a [security champion](/blog/2020/10/14/why-security-champions/) or actually embeds sec pros on the dev team, this is a critical piece in the process to release safer software faster.

### What advanced technologies are you using (or considering) in your DevOps practice?

“Bots” can test code, [AI can review code](/blog/2020/10/28/ai-in-software-development/), and a [low code/no code tool](/blog/2020/03/26/low-code-no-code/) will make [citizen developers](https://www.gartner.com/en/information-technology/glossary/citizen-developer) out of anyone in the organization. Now is definitely the time to make sure your DevOps team is future-proofing the tech stack.

### Do you have a plan for governance and compliance of your software supply chain?

To keep the [software supply chain secure](/blog/2022/01/06/elite-team-strategies-to-secure-software-supply-chains/), DevOps teams need visibility into and control over the entire development lifecycle. Can you easily deal with audits or attestations of compliance? Mature governance and compliance processes are essential in all industries today, not just those that are highly regulated.

### What advanced practices are you using (or considering) in your DevOps environment?

Whether it’s [Infrastructure as Code (IaC)](/topics/gitops/infrastructure-as-code/), GitOps, or [MLOps](/blog/2022/01/21/introducing-modelops-to-solve-data-science-challenges/), cutting-edge practices can jumpstart your releases and bring new and interesting opportunities to DevOps teams.

### Do you regularly assess DevOps careers and roles on your team?

Happy team members [really are more productive](/blog/2021/05/13/why-software-developer-job-satisfaction-matters-and-how-to-make-it-happen/), so consider this a PSA to keep career growth conversations a priority. 

In considering these 10 questions, your team will gain a fuller picture of your DevOps capabilities and how to address the technology and talent gaps you have identified.

