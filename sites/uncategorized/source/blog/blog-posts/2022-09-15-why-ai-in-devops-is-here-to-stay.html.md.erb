---
title: Why AI in DevOps is here to stay
author: Valerie Silverthorne
author_gitlab: vsilverthorne
author_twitter: ValSilverthorne
categories: devops platform
tags: DevOps, developer survey, integrations
description: Two years ago artificial intelligence wasn't part of mainstream
  software development. Now AI in DevOps is seemingly everywhere. Here's why.
image_title: /images/blogimages/laptop.jpg
twitter_text: Is your team using AI in DevOps? If it's not now, it will be soon.
  Here's what you need to know
---
In 2020, respondents to our annual Global DevSecOps Survey started mentioning artificial intelligence and machine learning for the first time. In that survey, roughly 16% of respondents were using “bots” to test code, or were planning to, while 12% of devs said knowledge of AI/ML would be critical to their future.

Fast forward just two years and AI in DevOps is a reality in teams around the world, according to our [2022 Global DevSecOps Survey](/developer-survey/). 

- 24% of respondents said their DevOps practices include AI/ML, more than double the 2021 percentage.

- 31% of teams are using AI/ML for code review, 16 points higher than last year. 

- Today 37% of teams use AI/ML in software testing (up from 25% in 2021), and 20% plan to introduce it this year. Another 19% plan to roll out AI/ML-powered testing in the next two to three years.

- Fully 62% of survey takers are practicing ModelOps.

- 51% use AI/ML to check (not test) code. 

All told, only 5% of teams said they had _no plans_ to incorporate AI in DevOps.

Here's a snapshot of where AI in DevOps is today and why, despite some challenges, AI will likely play an increasingly important role.

## Why AI in DevOps

In many ways, [DevOps and AI/ML](/blog/2020/10/28/ai-in-software-development/) are the perfect marriage: DevOps requires automation to reach maximum efficiency and AI/ML are obvious choices to tackle repetitive tasks. Imagine adding team members entirely focused on a single job, with incredible attention to detail and no need for vacations or even a coffee break – that’s an ML “bot” in a nutshell. 

When we asked DevOps teams what the most common reasons were for [software release delays](/blog/2022/08/30/top-reasons-for-software-release-delays/), the answers called out steps that are critical but manual, tedious, time-consuming, and potentially rife with errors: [software testing](/blog/2022/08/18/the-gitlab-guide-to-modern-software-testing/), code review, security testing and code development. For many teams, AI/ML could be key in streamlining these processes.

## Smarter software testing

No DevOps process is perhaps in more need of streamlining than software testing, which is no doubt why teams have been adding AI/ML into the mix for several years now. Testing is that process [everyone loves to hate](/blog/2021/05/06/the-software-testing-life-cycle-in-2021-a-more-upbeat-outlook/), but it is also the step that needs to happen more often in all the ways, or at least that’s what developers tell us year after year. But there are so many different kinds of tests, limited development time, and even more constrained QA teams. Machine learning bots can help bridge the manpower gap, freeing up resources to focus on tests best done by humans. 

And increased testing creates another issue – test data management – that could ideally be triaged and dealt with using AI.

## The benefits of ModelOps

AI/ML solutions have also made their way into other DevOps steps, specifically [ModelOps](/direction/modelops/). Not only is this an area GitLab is focusing on ([beginning with smarter code reviews](/blog/2022/01/04/the-road-to-smarter-code-reviewer-recommendations/)), but more than half of DevOps teams report they’re exploring what’s involved in bringing data science and operations together. 

## Beware the learning curve

Artificial intelligence and machine learning are not without their challenges, however. In our 2022 survey, developers expressed very real concerns about the steep learning curves involved in the technology adoption. “Technology is rapidly changing,” was a thought shared by many developers, alongside “implementing AI is an enormous challenge.” 

One developer summed it up: “4G, 5G, AI, Metaverse, virtual space - developers have to support all of this.”

Brendan O'Leary, [staff developer evangelist at GitLab](/company/team/#brendan), says AI naturally has a big learning curve because it requires experimentation. "This is not just a programming language," he explains. "We've got some data and a hypothesis around it and AI is what's going to help us prove it. This is a different kind of experiment than other kinds of coding... we've got to learn how to measure the impact, understand it, and iterate on it. It's a different kind of paradigm."
