---
title: "DevSecOps basics: 5 cross-functional team collaboration goals"
window_title: "5 Cross-Functional Secure Collaboration Goals | GitLab"
author: Vanessa Wegner
author_gitlab: vwegner
author_twitter: gitlabvanessa
categories: insights
image_title: "/images/blogimages/devsecops-cross-collaboration.jpg"
description: "Team work makes the (DevSecOps) dream work. Here's what you need to know about collaboration."
tags: agile, collaboration, DevOps, security
twitter_text: "True DevSecOps requires cross-functional collaboration. Here's our best advice."
featured: no
postType: content marketing
merch_banner: merch_four
merch_sidebar: merch_four
related_posts:
  - "/blog/2020/05/12/solve-devsecops-challenges-with-gitlab-ci-cd/"
  - "/blog/2020/03/12/how-to-security-as-code/"
  - "/blog/2019/12/19/future-merge-requests-realtime-collab/"
---

_This is the second in a five-part series on getting started with [DevSecOps](/solutions/dev-sec-ops/). Part one gives you nine ways to [shift security left](/blog/2020/06/23/efficient-devsecops-nine-tips-shift-left/). Part three offers concrete steps to add [automated security testing](/blog/2020/07/08/devsecops-security-automation/) into the mix. And part four explains how to [build a strong security culture](/blog/2020/07/15/security-culture-devsecops/) to support your DevSecOps efforts._

Cross-functional collaboration seems like a dry buzzword, but I promise you it’s way better than it sounds. After all, [DevOps](/topics/devops/) is cross-functional collaboration. DevSecOps is too. [In GitLab’s 2020 DevSecOps Survey](/developer-survey/), respondents had a plethora of strong reasons to do DevOps, including code quality, faster time to market, and _happier developers_.  But if there are rifts in communication and collaboration, any joint Dev, Sec, or Ops effort will all be for naught. 

[Collaboration](/blog/2019/12/19/future-merge-requests-realtime-collab/) is a core principle of DevOps but it is even more critical when bringing a third element – security – into the mix. Team members should feel comfortable reaching out across functions, asking questions, and sharing (non-sensitive) information. DevSecOps brings a special meaning to collaboration because of the shift in roles and responsibilities introduced by new security efforts. [Shifting your security practices left](/blog/2020/06/23/efficient-devsecops-nine-tips-shift-left/) will require some heavy lifting to truly get your DevSecOps practices off the ground.



## Leading by example

To begin, leaders from each functional team need to gain a mutual understanding of the other teams’ functions, roadblocks, and goals. Then they should discuss how security will be integrated into dev and ops – both how the lifecycle will flow, and how employees will be onboarded to any new processes. The results of that discussion should be shared across the entire organization to put everyone on the same page. 

Organizational heads will need to set an example for their teams. Employees should understand the collaborative work that is being done at the top, and how their own work is part of that effort. Additional expectations should also be communicated. These, as outlined below, should foster a collaborative environment that requires communication and reliability across teams. 

### Cross-functional team goals

It’s important to start with cross-functional team goals. These can be broad (like "deliver a secure and stable product at every release"), or specific ("add extensive identity verification features while ensuring compliance with GDPR"). Regardless of what the goal is, it should be made clear that employees across all functions are working together to achieve the same thing – and the cross-functional team will be evaluated as a whole. 

### Peer teaching and peer learning

When security employees understand the function and goals of Dev and Ops, they’ll be able to give better guidance and instruction on how each role can produce secure work. On the other hand, when Dev and Ops understand the function and goals of security, they’ll find it more logical to incorporate new security practices into their day-to-day work. This way, employees will understand how their goals align with and benefit each other. Employees should be encouraged to help one another learn – and certainly should be encouraged to learn from each other with open minds. 

### Centralized information sharing

For the best possible [DevSecOps](/solutions/dev-sec-ops/) experience, information needs to live and be shared in a central location – preferably [a single platform for the entire DevOps lifecycle](/stages-devops-lifecycle/). Ideally, the entire project team has access to all the information they need, all in the same place. This minimizes context-switching and reduces the likelihood of information getting lost or missed by team members. Keeping change logs, test and scan results, code reviews and other metrics colocated means everyone knows where to find the information they need to get their job done efficiently.  

## DevSecOps: Five collaboration goals

What does it look like to have strong collaboration across your teams? Qualitative principles are slightly harder to quantify than things like vulnerabilities, but there are plenty of ways to build your team's collaborative muscles and measure their strength:

1. Project planning is a joint effort between Dev, Sec, and Ops. 
1. Employees have access and actively contribute to a single datastore with reporting and visibility across the DevSecOps lifecycle.
1. Vulnerability management, reporting, and remediation will cost less and happen more quickly than before you began your DevSecOps efforts.
1. Tools have been consolidated so that development and security can collaborate within the same interface. 
1. Project delays are rarely caused by lack of communication or information sharing. 

_How efficient are your DevSecOps practices? [Take our DevSecOps Maturity Assessment to find out.](/solutions/dev-sec-ops/)_

**Read more about DevSecOps:**

[How CI can get you to DevSecOps faster](/blog/2020/05/12/solve-devsecops-challenges-with-gitlab-ci-cd/)

[Why security as code is important](/blog/2020/03/12/how-to-security-as-code/)

[How to integrate security into DevOps](/blog/2020/03/12/how-to-security-as-code/)

Cover image by [Charlie Egan](https://unsplash.com/@charlieegan3) on [Unsplash](https://unsplash.com/photos/qOR762W7OvA)
{: .note}
