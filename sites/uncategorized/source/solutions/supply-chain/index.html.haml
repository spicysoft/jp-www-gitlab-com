---
title: Software Supply Chain Security
description: Ensure your software supply chain is secure and compliant.
canonical_path: "/solutions/supply-chain/"
suppress_header: true
---

.blank-header
  = image_tag "/images/home/icons-pattern-left.svg", class: "image-border image-border-left", alt: "Gitlab hero border pattern left svg"
  = image_tag "/images/home/icons-pattern-right.svg", class: "image-border image-border-right", alt: "Gitlab hero border pattern right svg"
  .header-content
    %h1 Software Supply Chain Security
    %p Ensure your software supply chain is secure and compliant
    = link_to "Try GitLab Free", "/free-trial/", class: "btn cta-btn orange"
.gitlab-content-container.reverse-content

  .content.row-layout
    .full-width
      %p
        Securing the software supply chain is too often an afterthought. However, high-profile attacks are proving too costly to allow security to be kicked down the road in the software development process. GitLab can help by providing an end-to-end secure platform to help protect multiple attack surfaces, including protection for internal code, external sources, and even the build process itself. Additionally, GitLab can be used to manage and automatically enforce continuous software compliance requirements.

      .row
        .col-md-12
          %h2 Software Supply Chain Security with GitLab
          = image_tag "images/sscs.png", alt: "Software Supply Chain Security at GitLab"

      .row
        .col-md-6
          = image_tag "https://docs.gitlab.com/ee/administration/img/audit_events_v14_5.png", alt: "Audit Log Reporting"
        .col-md-6
          %h2 Security for GitLab Itself
          %ul
            %li
              = link_to "Separation of duties", "https://docs.gitlab.com/ee/user/permissions.html#permissions-and-roles"
            %li
              = link_to "Audit logging", "https://docs.gitlab.com/ee/administration/audit_events.html"
            %li
              = link_to "Access management controls", "https://docs.gitlab.com/ee/user/admin_area/credentials_inventory.html"
            %li
              = link_to "Compliance reporting", "https://docs.gitlab.com/ee/user/compliance/compliance_report/"
      %hr.divider/

      .row
        .col-md-6
          %h2 Internal Source Code Protection
          %ul
            %li
              = link_to "Version control", "https://about.gitlab.com/topics/version-control/what-is-git-version-control/"
              and
              = link_to "code history", "https://docs.gitlab.com/ee/user/project/repository/git_history.html"
            %li
              = link_to "Developer identity verification", "https://docs.gitlab.com/ee/user/project/repository/gpg_signed_commits/index.html"
            %li
              = link_to "Two-person code review", "https://docs.gitlab.com/ee/user/project/merge_requests/approvals/"
            %li
              = link_to "Branch protection", "https://docs.gitlab.com/ee/user/project/protected_branches.html"
              and
              = link_to "approval rules", "https://docs.gitlab.com/ee/user/project/merge_requests/approvals/rules.html"
            %li
              = link_to "Limited maintainer access", "https://docs.gitlab.com/ee/user/project/members/"
            %li
              = link_to "Code scanning", "https://docs.gitlab.com/ee/user/application_security/"
        .col-md-6
          = image_tag "https://docs.gitlab.com/ee/user/application_security/img/mr_security_scanning_results_v14_3.png", alt: "Code Scanning Results in Merge Requests"
      %hr.divider/

      .row
        .col-md-6
          = image_tag "https://docs.gitlab.com/ee/user/application_security/dependency_list/img/dependency_list_v13_11.png", alt: "Dependency List"
        .col-md-6
          %h2 External Source Code Protection
          %ul
            %li
              = link_to "SCA Scanning", "https://docs.gitlab.com/ee/user/application_security/"
            %li
              = link_to "SBoM generation", "https://docs.gitlab.com/ee/user/application_security/dependency_list/"
      %hr.divider/

      .row
        .col-md-6
          %h2 Build Execution Protection
          %ul
            %li
              = link_to "Support for scripted builds from code", "https://docs.gitlab.com/ee/ci/"
            %li
              = link_to "Secure, ephemeral, and isolated environment", "https://docs.gitlab.com/runner/security/"
            %li
              = link_to "Release evidence generation", "https://docs.gitlab.com/ee/user/project/releases/#release-evidence"
            %li
              = link_to "CI integration support for signing of build outputs and provenance/attestation generation", "#attestation-provenance-generation"
        .col-md-6
          = image_tag "images/release_evidence.png", alt: "Release Evidence"
      %hr.divider/

      .row
        .col-md-12
          %h2 SLSA Compliance
          %p
            The GitLab platform can help support users who are working to attain
            = link_to "SLSA", "https://slsa.dev/"
            compliance. The table below describes how the GitLab platform can support these requirements.
          %table{:border => 1}
            %tbody
              %tr
                %th SLSA Requirement
                %th SLSA Level
                %th GitLab Supported
              %tr
                %td Source: Version controlled
                %td 2
                %td
                  = link_to "Yes", "https://about.gitlab.com/topics/version-control/what-is-git-version-control/"
              %tr
                %td Source: Verified history
                %td 3
                %td
                  = link_to "Yes", "https://docs.gitlab.com/ee/user/project/repository/gpg_signed_commits/index.html"
              %tr
                %td Source: Retained indefinitely
                %td 3 / 4
                %td
                  = link_to "Yes", "https://docs.gitlab.com/ee/subscriptions/gitlab_com/#add-on-subscription-for-additional-storage-and-transfer"
              %tr
                %td Source: Two-person reviewed
                %td 4
                %td
                  = link_to "Yes", "https://docs.gitlab.com/ee/user/project/merge_requests/approvals/"
              %tr
                %td Build: Scripted build
                %td 1
                %td
                  = link_to "Yes", "https://docs.gitlab.com/ee/ci/"
              %tr
                %td Build: Build service
                %td 2
                %td
                  = link_to "Yes", "https://docs.gitlab.com/runner/"
              %tr
                %td Build: Build as code
                %td 3
                %td
                  = link_to "Yes", "https://docs.gitlab.com/ee/ci/"
              %tr
                %td Build: Ephemeral environment
                %td 3
                %td
                  = link_to "Yes", "https://docs.gitlab.com/runner/executors/#selecting-the-executor"
              %tr
                %td Build: Isolated environment
                %td 3
                %td
                  = link_to "Isolated execution environments", "https://docs.gitlab.com/runner/executors/#selecting-the-executor"
                  are supported. The GitLab runner itself does not support native signing of builds, so if build signing is used, then it would need to be configured as part of the CI build pipeline, which would give the build access to the provenance signing key.
              %tr
                %td Build: Parameterless
                %td 4
                %td
                  = link_to "Yes", "https://docs.gitlab.com/ee/ci/"
              %tr
                %td Build: Hermetic
                %td 4
                %td
                  Runners can be configured with
                  = link_to "limited network access", "https://docs.gitlab.com/runner/security/#network-segmentation"
                  \. To meet all aspects of this requirement would at a minimum require use of private runners together with setting up a trusted control plane for storing artifacts. Runners require communication with the GitLab server, so the GitLab server may also need to be run on a network without internet connectivity.
              %tr
                %td Build: Reproducible
                %td 4
                %td
                  = link_to "Yes", "https://docs.gitlab.com/ee/ci/"
              %tr
                %td Provenance: Available
                %td 1
                %td
                  = link_to "Yes via CI integration", "#attestation-provenance-generation"
              %tr
                %td Provenance: Authenticated
                %td 2
                %td
                  = link_to "Yes via CI integration", "#attestation-provenance-generation"
              %tr
                %td Provenance: Service generated
                %td 2
                %td
                  Users can generate provenance as part of their CI build script; however, the build service itself does not currently generate provenance natively.
              %tr
                %td Provenance: Non-falsifiable
                %td 3
                %td
                  Users can generate provenance as part of their CI build script; however, the build service itself does not currently generate provenance natively.
              %tr
                %td Provenance: Dependencies complete
                %td 4
                %td
                  GitLab's
                  = link_to "CI options", "https://docs.gitlab.com/ee/ci/"
                  provide the flexibility needed to run a wide variety of custom scripts as part of the build process. Meeting this requirement in GitLab is technically possible, but would require users to create a script to collect the required data and add it into the provenance output.
              %tr
                %td Provenance Contents: Identifies artifact
                %td 1
                %td
                  = link_to "Yes via CI integration", "#attestation-provenance-generation"
              %tr
                %td Provenance Contents: Identifies builder
                %td 1
                %td
                  = link_to "Yes via CI integration", "#attestation-provenance-generation"
              %tr
                %td Provenance Contents: Identifies build instructions
                %td 1
                %td
                  = link_to "Yes via CI integration", "#attestation-provenance-generation"
              %tr
                %td Provenance Contents: Identifies source code
                %td 2
                %td
                  GitLab's
                  = link_to "CI options", "https://docs.gitlab.com/ee/ci/"
                  provide the flexibility needed to run a wide variety of custom scripts as part of the build process. Meeting this requirement in GitLab is technically possible, but would require users to create a script to collect the required data and add it into the provenance output.
              %tr
                %td Provenance Contents: Identifies entry point
                %td 3
                %td
                  GitLab's
                  = link_to "CI options", "https://docs.gitlab.com/ee/ci/"
                  provide the flexibility needed to run a wide variety of custom scripts as part of the build process. Meeting this requirement in GitLab is technically possible, but would require users to create a script to collect the required data and add it into the provenance output.
              %tr
                %td Provenance Contents: Includes all build parameters
                %td 3
                %td
                  GitLab's
                  = link_to "CI options", "https://docs.gitlab.com/ee/ci/"
                  provide the flexibility needed to run a wide variety of custom scripts as part of the build process. Meeting this requirement in GitLab is technically possible, but would require users to create a script to collect the required data and add it into the provenance output.
              %tr
                %td Provenance Contents: Includes all transitive dependencies
                %td 4
                %td
                  GitLab's
                  = link_to "CI options", "https://docs.gitlab.com/ee/ci/"
                  provide the flexibility needed to run a wide variety of custom scripts as part of the build process. Meeting this requirement in GitLab is technically possible, but would require users to create a script to collect the required data and add it into the provenance output.
              %tr
                %td Provenance Contents: Includes reproducible info
                %td 4
                %td
                  GitLab's
                  = link_to "CI options", "https://docs.gitlab.com/ee/ci/"
                  provide the flexibility needed to run a wide variety of custom scripts as part of the build process. Meeting this requirement in GitLab is technically possible, but would require users to create a script to collect the required data and add it into the provenance output.

      .row
        .col-md-12
          %h2#attestation-provenance-generation Attestation/Provenance Generation
          %p
            The GitLab platform can support the generation of attestation or provenance by integrating the CI pipeline with a tool capable of signing the build output. The key for signing can be stored as a protected CI variable and passed into the build environment. The build environment can then leverage a tool such as
            = link_to "Cosign", "https://docs.sigstore.dev/cosign/git_support/"
            to generate the provenance in a way that would support meeting SLSA level 2 requirements.
          %p
            Additionally, Cosign supports adding additional metadata into the signature output
            = link_to "through the -a flag", "https://github.com/sigstore/cosign/blob/main/USAGE.md"
            \. When combined with GitLab's CI capabilities, users can meet some of the requirements at higher levels of SLSA by passing in data about the builder, build instructions, source code, and other relevant metadata values.  For more details on GitLab's future plans to help users achieve higher levels of SLSA natively with GitLab, take a look at our
            = link_to "overall software supply chain security vision", "https://about.gitlab.com/direction/supply-chain/"
            \.

      .row
        .col-md-12
          %h2 Related Content
          %p
            %ul
              %li
                = link_to "GitLab's future vision for software supply chain security", "https://about.gitlab.com/direction/supply-chain/"
              %li
                = link_to "How elite DevOps teams secure the software supply chain", "https://about.gitlab.com/blog/2022/01/06/elite-team-strategies-to-secure-software-supply-chains/"
              %li
                = link_to "How a DevOps Platform helps protect against supply chain attacks", "https://about.gitlab.com/blog/2021/04/28/devops-platform-supply-chain-attacks/"
              %li
                = link_to "Guide to Software Supply Chain Security", "https://learn.gitlab.com/devsecops-aware/software-supply-chain-security-ebook"
