%meta{charset: "UTF-8"}
%meta{name: "viewport", content: "width=device-width, initial-scale=1.0"}
%meta{"http-equiv": "Content-Security-Policy", content: "default-src 'self' https: http:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https: http: ; style-src 'self' 'unsafe-inline' https: http: https://cdn.logrocket.io https://cdn.lr-ingest.io https://cdn.lr-in.com; object-src https: http:; base-uri 'self'; connect-src 'self' https: http: wss: ws: https://*.logrocket.io https://*.lr-ingest.io https://*.logrocket.com https://*.lr-in.com; frame-src 'self' https: http:; img-src 'self' https: http: data:; manifest-src 'self'; media-src 'self' https: http:; child-src 'self' blob: https: http:;"}

- currentPageLayout = current_page.options[:layout].to_s
- if current_page.data.noindex
  %meta{ name: "robots", content: "noindex, follow" }
- else
  %meta{ name: "robots", content: "index, follow" }
  
-#unique titles to categorie pages
- if current_page.request_path.start_with?('blog/categories')
  - title = categories.to_s.camelize + ' blog category, page ' + page_number.to_s + ' of ' + num_pages.to_s
  %title #{title}
- elsif current_page.data.window_title
  %title #{current_page.data.window_title}
- else
  %title
    -
    #{current_page.data.title ? current_page.data.title : yield_content(:title)}
    \|
    = data.site.title

= partial "includes/layout/meta"

%link{rel: "alternate", type: "application/atom+xml", title: "Blog", href: "/atom.xml"}
%link{rel: "alternate", type: "application/atom+xml", title: "All Releases", href: "/all-releases.xml"}
%link{rel: "alternate", type: "application/atom+xml", title: "Security Releases", href: "/security-releases.xml"}
%link{rel: "alternate", type: "application/atom+xml", title: "Major Releases", href: "/releases.xml"}

- if current_page.data.hreflang_value
  -# hardcoding these for now until we get a more flexible solution in place
  %link{rel: "alternate", hreflang: "x-default", href: "https://about.gitlab.com/"}
  %link{rel: "alternate", hreflang: "ja-jp", href: "https://about.gitlab.com/ja-jp/"}
  %link{rel: "alternate", hreflang: "fr-fr", href: "https://about.gitlab.com/fr-fr/"}
  %link{rel: "alternate", hreflang: "fr", href: "https://about.gitlab.com/fr-fr/"}
  %link{rel: "alternate", hreflang: "de-de", href: "https://about.gitlab.com/de-de/"}
  %link{rel: "alternate", hreflang: "de", href: "https://about.gitlab.com/de-de/"}

- if currentPageLayout == "handbook-page-toc"
  %link{href: "/ico/handbook/favicon.ico?cache=2022041", rel: "shortcut icon"}
  %link{href: "/ico/handbook/favicon-192x192.png?cache=2022041", rel: "icon", sizes: "192x192", type: "image/png"}
  %link{href: "/ico/handbook/favicon-160x160.png?cache=2022041", rel: "icon", sizes: "160x160", type: "image/png"}
  %link{href: "/ico/handbook/favicon-96x96.png?cache=2022041", rel: "icon", sizes: "96x96", type: "image/png"}
  %link{href: "/ico/handbook/favicon-16x16.png?cache=2022041", rel: "icon", sizes: "16x16", type: "image/png"}
  %link{href: "/ico/handbook/favicon-32x32.png?cache=2022041", rel: "icon", sizes: "32x32", type: "image/png"}
- else
  %link{href: "/ico/favicon.ico?cache=2022041", rel: "shortcut icon"}
  %link{href: "/ico/favicon-192x192.png?cache=2022041", rel: "icon", sizes: "192x192", type: "image/png"}
  %link{href: "/ico/favicon-160x160.png?cache=2022041", rel: "icon", sizes: "160x160", type: "image/png"}
  %link{href: "/ico/favicon-96x96.png?cache=2022041", rel: "icon", sizes: "96x96", type: "image/png"}
  %link{href: "/ico/favicon-16x16.png?cache=2022041", rel: "icon", sizes: "16x16", type: "image/png"}
  %link{href: "/ico/favicon-32x32.png?cache=2022041", rel: "icon", sizes: "32x32", type: "image/png"}

%link{href: "/ico/apple-touch-icon-57x57.png?cache=2022041", rel: "apple-touch-icon", sizes: "57x57"}
%link{href: "/ico/apple-touch-icon-114x114.png?cache=2022041", rel: "apple-touch-icon", sizes: "114x114"}
%link{href: "/ico/apple-touch-icon-72x72.png?cache=2022041", rel: "apple-touch-icon", sizes: "72x72"}
%link{href: "/ico/apple-touch-icon-144x144.png?cache=2022041", rel: "apple-touch-icon", sizes: "144x144"}
%link{href: "/ico/apple-touch-icon-60x60.png?cache=2022041", rel: "apple-touch-icon", sizes: "60x60"}
%link{href: "/ico/apple-touch-icon-120x120.png?cache=2022041", rel: "apple-touch-icon", sizes: "120x120"}
%link{href: "/ico/apple-touch-icon-76x76.png?cache=2022041", rel: "apple-touch-icon", sizes: "76x76"}
%link{href: "/ico/apple-touch-icon-152x152.png?cache=2022041", rel: "apple-touch-icon", sizes: "152x152"}
%link{href: "/ico/apple-touch-icon-180x180.png?cache=2022041", rel: "apple-touch-icon", sizes: "180x180"}
%meta{content: "#554488", name: "msapplication-TileColor"}
%meta{content: "/ico/mstile-144x144.png?cache=2022041", name: "msapplication-TileImage"}
%meta{content: "/ico/browserconfig.xml", name: "msapplication-config"}


-# OneTrust Implementation across all pages,
-# only include if this is a production deployment.
-if ENV['CI_COMMIT_BRANCH'] == ENV['CI_DEFAULT_BRANCH']
  %script{:src => "https://cdn.cookielaw.org/consent/7f944245-c5cd-4eed-a90e-dd955adfdd08/OtAutoBlock.js", :type => "text/javascript"}
  %script{:charset => "UTF-8", "data-domain-script" => "7f944245-c5cd-4eed-a90e-dd955adfdd08", :src => "https://cdn.cookielaw.org/scripttemplates/otSDKStub.js", :type => "text/javascript"}
  :javascript
    function OptanonWrapper() { }

- if currentPageLayout == "handbook-page-toc" || currentPageLayout == "markdown_page"
  %script{id: "mermaidscriptsource", src: cache_bust("/javascripts/libs/mermaid.min.js", cache_bust_value), async: "false", defer: "false", type: "text/javascript"}

-# Default gtag start
:javascript
  window.dataLayer = window.dataLayer || []
  function gtag(){dataLayer.push(arguments);}
  gtag('consent', 'default', {
    'analytics_storage': 'denied',
    'ad_storage': 'denied',
    'functionality_storage': 'denied',
    'region': [ 'AT', 'BE', 'BG', 'HR', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'HU', 'IE', 'IT', 'LV', 'LT', 'LU', 'MT', 'NL', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE', 'IS', 'LI', 'NO', 'GB', 'PE', 'RU'],
    'wait_for_update': 500
  });
  gtag('consent', 'default', {
    'analytics_storage': 'granted',
    'ad_storage': 'granted',
    'functionality_storage': 'granted',
    'wait_for_update': 500
  });
-# Default gtag end

%script document.documentElement.className = 'html--js'

-if current_page.data.schema_org
  %script{ type: "application/ld+json"} 
    {"@context":"http://schema.org","@type":"Organization","name":"GitLab","legalName":"GitLab Inc.","url":"https://about.gitlab.com","logo":"https://gitlab.com/gitlab-com/gitlab-artwork/raw/master/logo/logo.png","foundingDate":"2011","founders":[{"@type":"Person","name":"Sid Sijbrandij"},{"@type":"Person","name":"Dmitriy Zaporozhets"}],"address":{"@type":"PostalAddress","streetAddress":"268 Bush Street #350","addressLocality":"San Francisco","addressRegion":"CA","postalCode":"94104","addressCountry":"USA"},"sameAs":["https://www.facebook.com/gitlab","https://twitter.com/gitlab","https://www.linkedin.com/company/gitlab-com","https://www.youtube.com/channel/UCnMGQ8QHMAnVIsI3xJrihhg"]}

%script{:async => "", :src => "//cdn.bizible.com/scripts/bizible.js", :type => "text/javascript"}

-if current_page.data.google_optimize

  -# Google Optimize anti-flash snippet - CSS for .async-hide located in _base.css file
  %script{ type: "text/javascript" }
    (function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
    h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
    (a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
    })(window,document.documentElement,'async-hide','dataLayer',1000,
    {'GTM-WC3ZR2P':true});
  -# End Google Optimize anti-flash

-# Google Optimize + GA snippet
%script{ type: "text/javascript" }
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-37019925-1', 'auto', {allowLinker: true});
  ga('require', 'GTM-WC3ZR2P');

-# Google Tag Manager
%script{ type: "text/javascript" }
  (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.setAttributeNode(d.createAttribute('data-ot-ignore'));j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-NJXWQL');
-# End Google Tag Manager

-# highlight-tooltip Popper
- if currentPageLayout == "handbook-page-toc"
  = partial "includes/highlight_tooltip_head"
-# End highlight-tooltip Popper

-if current_page.data.campaign
  %script
    dataLayer.push({'campaign': '#{current_page.data.campaign}'});

%script
  -# search functionality
  (function(w,d,t,u,n,s,e){w['SwiftypeObject']=n;w[n]=w[n]||function(){
  (w[n].q=w[n].q||[]).push(arguments);};s=d.createElement(t);
  e=d.getElementsByTagName(t)[0];s.async=1;s.src=u;e.parentNode.insertBefore(s,e);
  })(window,document,'script','//s.swiftypecdn.com/install/v2/st.js','_st');
  - if current_page.request_path.start_with?('handbook')
    -# Handbook search
    _st('install','DTF81Pizm7yGQpgXcrMP','2.0.0');
  - elsif current_page.request_path.start_with?('company')
    -# Handbook search
    _st('install','DTF81Pizm7yGQpgXcrMP','2.0.0');
  - elsif current_page.request_path.start_with?('blog')
    -# Blog search
    _st('install','5geYbhTxNzL5dsekC-B-','2.0.0');
  - elsif current_page.request_path.include?('releases')
    -# releases search (also uses blog search)
    _st('install','5geYbhTxNzL5dsekC-B-','2.0.0');
  - else
    -# Default search
    _st('install','Z4n7msKyctXXfJs66EKx','2.0.0');

- if current_page.data.canonical_path
  %link{ :rel => "canonical", :href => "https://about.gitlab.com#{current_page.data.canonical_path}"}
- else 
  %link{ :rel => "canonical", :href => "https://about.gitlab.com#{current_page.url}" }

-if  current_page.data.clusterType
  %script
    dataLayer.push({'clusterType': '#{current_page.data.clusterType}'})

%link{rel: "stylesheet", href: font_url(current_page)}
- unless (current_page.data.disable_fontawesome == true)
  %link{:crossorigin => "anonymous", :href => "https://use.fontawesome.com/releases/v5.1.0/css/all.css", :integrity => "sha384-lKuwvrZot6UHsBSfcMvOkWwlCMgc0TaWr+30HWe3a4ltaBwTZhyTEggF5tJv8tbt", :rel => "stylesheet"}
- unless (current_page.data.disable_tinyslider == true)
  %link{rel: "stylesheet", href: "https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.8.7/tiny-slider.css"}

= stylesheet_link_tag :disable_animations if environment?(:test)
- unless (current_page.data.disable_default_styles == true)
  = stylesheet_link_tag :styles, :highlight
// === Cache Bust Step 4 ===  
- if current_page.data.extra_css
  - current_page.data.extra_css.each do |css_name|
    = cache_bust(stylesheet_link_tag(css_name), cache_bust_value)

- if current_page.data.slippers
  %script{src: cache_bust("/javascripts/slippers.js", cache_bust_value), type: "text/javascript"}
- if current_page.data.slippers_preflight
  = cache_bust(stylesheet_link_tag('slippers-preflight.css'), cache_bust_value)
= cache_bust(stylesheet_link_tag("slippers.css"), cache_bust_value)
= cache_bust(stylesheet_link_tag("be-navigation.css"), cache_bust_value)

-# LogRocket
-# Skip LogRocket if we're in the handbook
-# Additional logic to only run in production can be found in the LogRocket entrypoint at `source/javascripts/logrocket.js` 
- unless current_page.request_path.start_with?('handbook')
  %script{ src: cache_bust("/javascripts/logrocket.js", cache_bust_value), type: "text/javascript"}
