---
layout: sec_direction
title: "Group Direction - MLOps"
description: "Focused on enabling data teams to build, test, and deploy their machine learning models"
canonical_path: "/direction/learn/mlops/"
noindex: true
---

## On this page
{:.no_toc}

- TOC
{:toc}


## Overview

Today, data scientists piece together data, tooling, and frameworks to get bespoke data science workloads running and producing business value. Data scientists then hand off models to engineering teams to attempt to deploy them to production. These teams speak different languages, use different tools, and have completely different workflows. This makes it very difficult to deploy data science workloads to production, increasing time to value and costs. We want to make it faster and easier for organizations to get data science efforts to production as efficiently and collaboratively as possible.

> [Watch a video overview](https://about.gitlab.com/direction/modelops/#stage-direction-walkthrough) of the GitLab ModelOps direction

### Goal

This group will be focused on enabling data teams to build, test, and deploy their machine learning models. This will be net new functionality within GitLab and will bridge the gap between DataOps teams, data scientists, and development teams to get data science workloads deployed to production.

MLOps will provide tuning, testing, and deployment of machine learning models including version control and partial rollout and rollback. These new capabilities will be particularly attractive to a CTO, CIO, data teams, and Ops teams.

### Categories

- *Model* → Algorithm selection based on data shape and analytics doing parameter tuning, feature selection, and data selection. This includes git-focused functionality for hosting machine learning models. Examples include [JupyterHub](https://jupyter.org/hub) and [Anaconda](https://www.anaconda.com/) as well as [DVC](https://dvc.org/), [Dolt](https://github.com/dolthub/dolt), and [Delta lake](https://delta.io/).
- *Train* → Provide data teams with the tools to take raw large data sets, clean / morph / wrangle the data, and import the sanitized data into their models to prepare for deployment. Examples of this include [Trifacta](https://www.trifacta.com/), [TensorFlow Serving](https://www.kubeflow.org/docs/components/serving/tfserving_new/), [UbiOps](https://ubiops.com/features/), and [Sagemaker](https://aws.amazon.com/sagemaker/).
- *Test* → Verify everything works as expected and is ready for deployment. Examples of this include [PyTest](https://docs.pytest.org/en/stable/), [PyTorch](https://pytorch.org/), [Keras](https://keras.io/), and [Scikit-learn](https://scikit-learn.org/stable/).
- *Deploy* → Enable data teams to deploy their data models including partial rollout, partial rollback, and versioning of training data. Examples of this include [Kubeflow](https://www.kubeflow.org/) and [CML](https://cml.dev/).

## Partnership

Data, ML, and AI will make software much more useful. They also will require a ton of tooling. A great challenge for MLOps is the exploding toolchain of data science frameworks, vendors, and platforms. This is a problem GitLab has experience solving as it happened with DevOps.

We want to partner and integrate with existing players in the space to help unify and centralize data science workloads around organizations' existing DevOps and Source Code Management solutions. We believe GitLab provides a great platform to stitch together existing toolchains around existing production software development life cycles, bringing data science workloads closer to production.

## What's Next & Why

Initially, our focus is on basic quality of life improvements to allow basic data science workloads on top of GitLab's existing CI/CD and runners. This will lay the framework for our Applied Machine Learning group to build data science features on top of existing GitLab features enabling us to dogfood any DataOps and MLOps features we build.

We are actively working to improve GPU support on GitLab runners allowing them to be tasked with data science workloads in existing GitLab CI/CD workflows. This will allow us to explore integrating with widely used data science tools like Jupyter notebooks, open-source ML and AI frameworks, and data workflows.

### Sample ML Project Demos

Below are a few sample projects using GitLab CI and ML:

- [GitLab with Kubernetes for ML](https://gitlab.com/mon-customer-demo/imda-hybrid-coolness/imda-team-management/image-detection/experiment-datascientists/fashion-mnist-imda)
- [GitLab with Azure ML](https://gitlab.com/mon-customer-demo/imda-hybrid-coolness/imda-team-management/image-detection/experiment-datascientists/covmod)
- [GitLab with Kubeflow](https://gitlab.com/mon-customer-demo/car_crashes)

More reference implementation ideas can be found in the [MLOps with GitLab overview](https://datastudio.google.com/u/0/reporting/c708a721-2e95-409b-9a40-4c14eff1ae06/page/4OrWB).

### Roadmap

* Quality of life improvements for basic data science workloads within GitLab
* Widely used data science toolchain CI templates to make it easy to get popular tools up and running within GitLab CI/CD
* Explore partnerships with vendors already winning in the ML/AI space with joint GitLab customers

## Upcoming Releases:

* [13.9 - Improved GPU support for GitLab Runner](https://gitlab.com/gitlab-com/www-gitlab-com/-/merge_requests/72801/diffs)
* [13.9 - Ability to autoscale GPUs on Google Cloud Platform](https://gitlab.com/gitlab-org/ci-cd/docker-machine/-/merge_requests/48)

## Analyst Research

* [2020 Gartner Magic Quadrant for Data Science and Machine Learning Platforms](https://www.gartner.com/en/documents/3980855)
* [Gartner's 2020 Critical Capabilities for Data Science and Machine Learning Platforms](https://www.gartner.com/en/documents/3981610)
* [Forrester Now: Who’s Who In Machine-Learning Platform Vendors](https://www.forrester.com/fn/2rDQrYLmEs6jeKDfy830qO)

<p align="center">
    <i><br>
    Last Reviewed: 2021-02-14<br>
    Last Updated: 2021-02-14
    </i>
</p>
