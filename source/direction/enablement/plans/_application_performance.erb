### Application Performance

The Application Performance team is responsible for application-wide concerns that impact the availability, reliability and performance of GitLab at any scale. The Memory team analyzes the behavior of GitLab, recognizes bottlenecks, proposes changes to the application and works on overall improvements to ensure that GitLab works well for self-managed customers and our SaaS offering alike.

For FY23, the group will expand its focus from memory constrained environments to implementing application and memory optimizations for Gitlab on various scales. The key themes and initiatives for the group follow:

* Improve memory consumption and resource usage
  * [Split the application into functional parts](https://docs.gitlab.com/ee/architecture/blueprints/composable_codebase_using_rails_engines/) to ensure that only needed code is loaded with all dependencies. This initiative has also the potential to create new scalability opportunities going forward
  * Re-evaluate [the minimum resource requirements for Gitlab](https://gitlab.com/gitlab-com/Product/-/issues/2904) and then continue the efforts on [implementing memory improvements in memory constrained environments](https://gitlab.com/groups/gitlab-org/-/epics/5409)
* Performance and Scalability improvements
  * Scalability improvements for Redis, starting with [partitioning redis-persistent to move session data to its own cluster](https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/579) and then following with a similar approach for load balancing data
  * [Improve the Rails boot-up time](https://gitlab.com/gitlab-org/gitlab/-/issues/213992), an initiative that would benefit pod start time and enable quicker scaling inside of Kubernetes
  * [Move GitLab to Ruby 3](https://gitlab.com/groups/gitlab-org/-/epics/5149), which offers both performance and concurrency improvements
  * [Improve GitLab's object storage backend](https://gitlab.com/groups/gitlab-org/-/epics/483), which is widely used in Gitlab's application layer; any code that interacts with object storage can affect the performance of the application or even the availability of specific GitLab features

You can learn more about Application Performance group plans on the [Application Performance Direction page](/direction/application_performance/).