---
layout: markdown_page
title: "Category Strategy - Geo-replication"
description: "Using Geo replications reduces the time it needs to fetch and clone repositories, which increases developer productivity. Learn more here!"
canonical_path: "/direction/geo/geo_replication/"
---

- TOC
{:toc}

## üåè Geo-replication

|Section | Group | Last updated|
|--------|-------|------|
|[Enablement](https://about.gitlab.com/direction/enablement/) | [Geo](https://about.gitlab.com/direction/geo/)|  2022-10-05   |

Thanks for visiting this category strategy page for GitLab Geo Replication. This page belongs to the [Geo group](https://about.gitlab.com/handbook/product/categories/#geo-group).

### Overview

Geo replication improves the GitLab experience for geographically distributed teams.

Pulling a large Git repository, or interacting with the UI, can take a long time for locations geographically remote from the main GitLab instance.

Geo-replication provides an easily configurable, replica Geo site, which can be deployed in additional regions and accelerates the GitLab experience for nearby users. This is achieved by replicating the entire GitLab data set to the replica site in a coordinated, verifiable and coherent manner. Data can be accessed from any of the locations whilst intelligent proxying techniques guarantee users have access to the most recent data. Users are directed to the closest site using [location aware URL](https://docs.gitlab.com/ee/administration/geo/secondary_proxy/location_aware_external_url.html).

Geo-replication requires a significant investment to be configured by systems administrators and is cumbersome in more complex setups.

Geo [replicates 90% of all planned primary data types](https://docs.gitlab.com/ee/administration/geo/replication/datatypes.html) generated by GitLab and a number of data types [can be disabled if required](https://docs.gitlab.com/ee/administration/geo/replication/datatypes.html#replicated-data-types-behind-a-feature-flag).

![Geo proxying flow diagram](images/geo_proxying.png)

#### How you can help

Please reach out to Sampath Ranasinghe, Product Manager for the Geo group ([Email](mailto:sranasinghe@gitlab.com)) if you'd like to provide feedback or ask any questions related to this product category.

This strategy is a work in progress, and everyone can contribute. Please comment and contribute in the linked
[issues](https://gitlab.com/groups/gitlab-org/-/issues?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=group%3A%3Ageo) and [epics](https://gitlab.com/groups/gitlab-org/-/epics?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=group%3A%3Ageo) on this page. Sharing your feedback directly on GitLab.com is the best way to contribute to our strategy and vision.

#### Useful resources

- [Roadmap for Geo Replication](https://gitlab.com/groups/gitlab-org/-/roadmap?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=group%3A%3Ageo&label_name[]=geo%3A%3Aactive)
- [Maturity: <%= data.categories["geo_replication"].maturity.capitalize %>](/direction/maturity/)
- [Documentation](https://docs.gitlab.com/ee/administration/geo/index.html)
- [Complete Maturity epic](https://gitlab.com/groups/gitlab-org/-/epics/1508)
- [All Epics](https://gitlab.com/groups/gitlab-org/-/epics?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=group%3A%3Ageo)

### Vision

With more and more companies shifting towards working remotely, GitLab becomes a central place for collaboration and the DevOps Platform for many customers. GitLab should offer the same great experience to users, regardless of their location.

Geo operates transparently in the background, accelerating read operations by serving data from the closest Geo site and proxying write requests back to the primary all via a single URL.

Our vision for Geo-replication is for new Geo sites to be easily deployable to new locations as required and scaled to the requirements for these new remote teams. Geo will be easier to set up and operate, specially in multi-node architectures. It will be possible to deploy a new operational Geo site within minutes whether it is a single node or a multi-node site.

We will achieve 100% replication and verification of all core GitLab data types by leveraging the [self-service framework](https://docs.gitlab.com/ee/development/geo/framework.html). The self-service frame will allow other GitLab teams to easily add new data types to Geo ensuring Geo evolves with GitLab to meet the needs of our customers. 

System administrators will have [end-to-end observability]((#improve-observability)) of the replication process for each site via the UI with capabilities to troubleshoot and remediate failures. Make it easy for the systems administrator to understand what Geo operations are upcoming, in progress, completed and failed. For failed operations, Geo will provide information and capabilities in the UI to allow the system administrator to correct the fault.

Geo will [accelerate more data types](#accelerate-more data-types) enabling more tasks to be accomplished with a data stored at the secondary sites thus helping to redistribute the load on the primary site. Geo will continue to intelligently proxy requests back to the primary when necessary to provide access to the most up-to-date data.
  
Customers will be able to choose which data types are replicated to each secondary Geo site with [fine-grained controls](#ability-to-disable-geo-replication-by-data-type-in-the-ui) thus being able to tailor each site to their needs.

Geo will also accelerate CI runners by allowing use of [Geo secondary sites for CI jobs](#use-of-geo-secondary-sites-for-ci-jobs) helping to reduce the load on the primary site.

### Target audience and experience

#### [Sidney (Systems Administrator)](https://about.gitlab.com/handbook/product/personas/#sidney-systems-administrator)

- üôÇ **Minimal** - Sidney is able to configure the Geo-replication setup manually, most commonly used data types are replicated.
- üòä **Viable** - Sidney is able to configure Geo-replication in a mostly automated fashion. Various Geo-replication tasks (status reports, maintenance etc.) can be performed using the GitLab UI. All customer relevant data types are replicated.
- üòÅ **Complete** - Sidney can setup Geo in an automated and fast way (minutes, not hours). A dashboard provides an overview for all relevant Geo tasks.
- üòç **Lovable** - Sidney can setup Geo in an automated and fast way and everything is configurable from the UI, all sites appear writable.

#### [Sasha (Software Developer)](https://about.gitlab.com/handbook/product/personas/#sasha-software-developer)

- üôÇ **Minimal** - Sasha has to configure Git manually to use Geo. No automatic proxying of request to the primary. WebUI on secondary is not available.
- üòä **Viable** - Sasha has to configure Git manually but automatic proxying to the primary is possible. WebUI is read-only.
- üòÅ **Complete** - Sasha only requires a single URL for all operations - the correct Geo site is used automatically. Sasha can point CI/CD jobs to a Geo secondary site to reduce load on the primary.
- üòç **Lovable** - Sasha can push and pull directly to a Geo site. Everything is read and writable, including the WebUI. The user experience is the same independent of location.

For more information on how we use personas and roles at GitLab, please [click
here](https://about.gitlab.com/handbook/product/personas/).

### What's next & why

#### Replicate and verify all core GitLab data types

Geo will replicate and verify all core GitLab data types. We are currently at 90% for replication and 77% for verification. To achieve 100% replication we plan to add support for [alert metric images](https://gitlab.com/gitlab-org/gitlab/-/issues/362564), [issue metric images](https://gitlab.com/gitlab-org/gitlab/-/issues/362561) and [Dependency proxy](https://gitlab.com/groups/gitlab-org/-/epics/8833)

#### Improve observability

Geo performs complex operations by scheduling tasks in the background to replicate data to the secondary sites. Geo will [improve the observability](https://gitlab.com/groups/gitlab-org/-/epics/8240) of these operations for the systems administrators such that they are able to monitor tasks that are currently running, tasks scheduled to run in the future and tasks that have failed. For tasks that have failed, Geo will surface information in the UI that will assist in troubleshooting the root cause of the failure. Improved observability will also enhance the experience for systems administrators who are setting up their secondary site for the first time, providing immediate feedback on whether the setup was successful and replication processes are successfully underway. Failed replication can hinder the availability and reliability of a secondary site. Further, it can negatively impact chances of successful recovery in [disaster recovery](https://about.gitlab.com/direction/geo/disaster_recovery/) scenarios resulting in the loss of data.

#### Accelerate more data types

Today Geo [accelerates access to a number of data types](https://docs.gitlab.com/ee/administration/geo/secondary_proxy/#features-accelerated-by-secondary-geo-sites) including projects, wikis and LFS objects by serving read requests from the secondary site closest to the user accessing the data. Geo replicates many other data types. Users can benefit from [accelerating more data types](https://gitlab.com/groups/gitlab-org/-/epics/8239) with two key benefits:

1. Reduced load on the primary site.
1. An improved user experience for users access this data by serving this data from a secondary site that is closer in location.  

We will initially focus on the high impact data types that will deliver the most value to our customer by identify data types that are large in size and most frequently accessed such as container registries and CI job and pipeline artifacts. As part of this effort, Geo will collect statistics on data types that are proxied to the primary from the secondary sites. This will allow us to make more informed decisions as to which data types to accelerate in the future. This will open up more use cases for Geo replication and help drive adoption.

#### Use of Geo secondary sites for CI jobs

Today Geo accelerates users by serving read requests from the secondary site, in future Geo should also accelerate CI jobs by [enabling CI runners to use specific Geo secondary sites](https://gitlab.com/gitlab-org/gitlab/-/issues/3294). This will allow the CI runners to fetch data directly from the closest secondary site reducing load on the primary site. Writes will continue to be proxied back to the primary to maintain consistency.

#### Easier and simpler setup

Setting up Geo is highly manual and cumbersome, especially in high-availability
configurations. Simplifying the installation and configuration of Geo for single
and multi-node sites will remove a pain point for systems administrators and help drive adoption.

#### Ability to disable Geo replication by data type in the UI

To save bandwidth and resources, a systems administrator may want to selectively enable and disable Geo replication for certain types of data. Currently, this is not possible unless a data type is released behind a feature flag, and this is not the case for all data types. We want to provide administrators an easy way to [enable or disable replication by data type in the Geo Administrator UI](https://gitlab.com/groups/gitlab-org/-/epics/6388).

#### Simplify managing a multi-node Geo site from a single point of entry

To configure and manage a multi-node Geo site requires logging in to multiple nodes to perform specific steps in the correct order.

It would make administrators jobs a lot easier if operations could be orchestrated from a single point of entry into the site and the appropriate operations performed on the sites. This will lower the technical barrier for adoption of Geo replication.

### In a year

#### Publish a Geo metrics dashboard

It is currently possible for systems administrators to get a basic overview of the Geo status using the Geo Web UI.
However, administrators would like easier access to more in-depth Geo metrics such as [the time it takes to mirror a commit](https://gitlab.com/gitlab-org/gitlab/-/issues/197147). We want to define and implement key metrics that allow administrators to better monitor their Geo
installations and [publish the metrics to a preconfigured Grafana dashboard](https://gitlab.com/groups/gitlab-org/-/epics/1530).

#### Geo supports an advanced caching mode

For Geo-replication only a subset of data may need to be replicated but Geo sites require spinning up the entire GitLab stack, less may be sufficient. Additionally, systems administrators can select a subset via selective sync, but they may be wrong.

We are investigating an [advanced caching mode](https://gitlab.com/groups/gitlab-org/-/epics/2610) with the following properties:

- A Geo site that dynamically determines which data needs to be kept close to the remote location
- Minimal hardware requirements
- Fully hidden behind geo-location aware URL

### What is not planned right now

We are currently not planning on moving away from PostgreSQL as a backend database
in favour of e.g CockroachDB or Google Spanner. This has implications for
writable Geo site Geo, but for now we will continue to support PostgreSQL.

#### Writable Geo sites

Geo secondary sites are read-only. Customer feedback has indicated a desire for additional
[Active active git replication](https://gitlab.com/gitlab-org/gitlab/-/issues/1381). With the availability of [Gitaly Cluster](https://docs.gitlab.com/ee/administration/gitaly/praefect.html) we may start investigating writable Geo sites at some point in FY23.

#### Tightly coupled or synchronous Geo sites

Geo will remain an asynchronous solution with loose time constraints for replications and verification.

### Maturity plan

This category is currently at the `<%= data.categories["geo_replication"].maturity.capitalize %>` maturity level, and our next maturity
target is `Complete` (see our [definitions of maturity
levels](/direction/maturity/#legend).

You can track the work that will move the category to `Complete` in
[this epic](https://gitlab.com/groups/gitlab-org/-/epics/1508).

### Metrics

- Performance indicator is [number of unique users utilizing a Geo secondary](https://about.gitlab.com/handbook/product/enablement-section-performance-indicators/#enablementgeo---paid-gmau---number-of-unique-users-utilizing-a-geo-secondary)
- We track the [total number of Geo sites and potential users](https://app.periscopedata.com/app/gitlab/500159/Enablement::Geo-Metrics?widget=9939914&udv=0)
- We track the [distribution of Geo site number](https://app.periscopedata.com/app/gitlab/500159/Enablement::Geo-Metrics?widget=6471733&udv=0)

### Competitive landscape

The top competitors for Geo-replication are

- [GitHub Enterprise geo-replication](https://help.github.com/en/enterprise/2.17/admin/installation/about-geo-replication)
- [Azure DevOps](https://azure.microsoft.com/en-in/services/devops/)
- [Bitbucket Smart Mirroring](https://confluence.atlassian.com/bitbucket/work-with-bitbucket-smart-mirroring-838427532.html)

#### Feature overview

| Feature                     | GitHub | AzureDevOps | Bitbucket Smart Mirroring | GitLab |
|-----------------------------|--------|-------------|---------------------------|--------|
| Mirror repositories         | ‚úÖ      | ‚úÖ           | ‚úÖ                         | ‚úÖ      |
| Active-active replication   | ‚úÖ      | N/A         | ‚ùå                         | ‚ùå      |
| Selective sync              | N/A    | N/A         | ‚úÖ                         | ‚ö†Ô∏è      |
| UI configuration            | ‚ùå      | ‚úÖ           | N/A                       | ‚ö†Ô∏è      |
| Kubernetes support          | ‚ùå      | ‚ùå           | ‚ùå                         | ‚ö†Ô∏è      |
| Mirror docker registries    | ‚ùå      | N/A         | ‚ùå                         | ‚úÖ      |
| LFS and file upload support | ‚úÖ      | N/A         | ‚úÖ                         | ‚úÖ      |
| Automatic DNS               | ‚úÖ      | ‚úÖ           | ‚ùå                         | ‚ö†Ô∏è      |
| GUI Dashboard               | ‚úÖ      | ‚úÖ           | N/A                       | ‚úÖ      |
| Request proxying            | ‚úÖ      | N/A         | N/A                       | ‚ö†Ô∏è      |

 ‚úÖ Fully available
 ‚ö†Ô∏è Partially available
 ‚ùå Not available
 N/A No information available

### Top customer success/sales issue(s)

- [GitLab CI should be able to use specific Geo secondary to clone from](https://gitlab.com/gitlab-org/gitlab/-/issues/3294)
- [Active active git replication](https://gitlab.com/gitlab-org/gitlab/-/issues/1381)

### Top user issues

- [Category issues listed by popularity](https://gitlab.com/groups/gitlab-org/-/issues?scope=all&state=opened&label_name[]=group%3A%3Ageo&label_name[]=Category%3AGeo%20Replication)

### Top internal customer issues/epics

- [Geo: Create a Geo metrics dashboard](https://gitlab.com/groups/gitlab-org/-/epics/1530)

### Top strategy item(s)

- [Simplify Geo's installation](https://gitlab.com/groups/gitlab-org/-/epics/1465)
- [Secondary mimicry](https://gitlab.com/gitlab-org/gitlab/-/issues/207168)
- [Geo: Use Geo sites for CI/CD](https://gitlab.com/groups/gitlab-org/-/epics/1527)
