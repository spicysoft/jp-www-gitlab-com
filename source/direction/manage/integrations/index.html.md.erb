---
layout: markdown_page
title: "Group Direction - Integrations"
---

- TOC
{:toc}

| ------ | ------ |
| **Stage** | [Manage](/direction/manage/) |
| **Maturity** | [Viable](/direction/maturity/) |
| **Last reviewed** | 2022-05-06 |

- [Issue List](https://gitlab.com/groups/gitlab-org/-/issues?scope=all&state=opened&label_name[]=group%3A%3Aintegrations)
- [Epic List](https://gitlab.com/groups/gitlab-org/-/epics/1515)
- [Overall Manage Direction](/direction/manage/)


## Manage:Integrations Vision

GitLab's vision is to be the best [single application for every part of the DevOps toolchain](/handbook/product/single-application/). However, we acknowledge that to achieve this, there are many workflows, custom scripts, and nuanced integrations that customers require and GitLab may not be able to prioritize. To make the most impact towards that vision, we've identified a narrower vision for the Manage:Integrations group:

**We will drive GitLab to enable [intuitive collaboration with tools our customers rely on](https://about.gitlab.com/handbook/product/gitlab-the-product/#plays-well-with-others) so they can capture the most value possible from the GitLab product and its many features.**

GitLab will have a robust catalog of lovable, feature-complete integrations that serve customers across all key industries and functions that utilize GitLab. Our customers will enjoy learning about and using our APIs and webhooks to design creative solutions and intelligent workflows, and they'll share GitLab as an example of an incredible third-party developer experience. Partners will have diverse but straightforward paths for contributing or coordinating integrations that expand the GitLab ecosystem and the larger developer ecosystem in ways that provide tremendous value to the developer community. And we'll do this all in ways that align with GitLab's culture and values, by promoting transparency, focusing on iteration, and incentivizing collaboration/contribution throughout the community.

The following GitLab objectives driven by our [product strategy](https://about.gitlab.com/direction/#product-strategy) will guide our prioritization:

  - [Focus on increasing Stages per Organization](https://about.gitlab.com/direction/#product-strategy) - We'll be guiding GitLab in implementing integrations that make it easier to expand and adopt their 3rd and 4th GitLab Stages, to compare features, and to replace/reduce costs of existing tools by utilizing a single DevOps platform.
  - [Harness the unique power of a single application](https://about.gitlab.com/direction/#product-strategy) - By surfacing data from external tools into GitLab, we'll be able to showcase the power of GitLab as a single application. As an example, we'll want to make it easier to aggregate data from external tools and surface it in Value Stream Reporting and Analytics within GitLab.
  - [Increase wider-community contributions](https://about.gitlab.com/direction/#product-strategy) - Our focus on the Integrations Static Domain Specific Language and additional tools/abstractions for building and contributing integrations will help drive community contributions while also expanding our Ecosystem.
  - [DevOps for more personas](https://about.gitlab.com/direction/dev/#devops-for-more-personas) - Integrations will help us solve for personas like Product Managers and Executives by making it easier to use tools they are familiar with, while expanding to use GitLab more closely with those tools.

To learn more about the most recent changes in our Direction and how we will be approaching the challenge of expanding our ecosystem moving forward, here's an overview:

<figure class="video_container">
    <iframe src="https://www.youtube.com/embed/U6-QChGoDaI" frameborder="0" allowfullscreen="true"> </iframe>
</figure>

## Strategy

Given unlimited resources and time, we'd love to prioritize and support all possible integrations, but our strategy will provide the guiding rules and logic for how we want to focus our group's efforts. 

Our strategy for the upcoming 2-3 years is based on three pillars: 

- API & webhook strategy
- Integration platform tooling
- Drive strategic enterprise integrations

### Guide, facilitate, and lead implementation of an API strategy

The Manage:Integrations group is facilitating the discussion around our APIs with a key objective of improving usability, reliability, and performance for customers and partners in our ecosystem. To identify the key areas of focus, we feel this particular topic will require significant cross-functional support. We've established a [working group](https://about.gitlab.com/company/team/structure/working-groups/api-vision/) to drive these topics forward, and will update this section based on the exit criteria below:

- Define the vision of the GitLab API for the future years
- Set the foundation of a cohesive development strategy going forward
- Iterate with a next generation API
- Clarify the lifecycle of our APIs
- Improve the documentation of our APIs
- Create learning paths and content to contribute to our APIs
- Define minimum levels of performance and stability, with appropriate checks and monitoring
- Refresh personas to account for users of our APIs

For our webhooks, we'll increase the robustness of our webhook offering and align with other teams on how best to achieve an event-driven architecture. This includes making it easier to configure and maintain webhooks, as well as troubleshooting issues, easily redelivering events, and coordinating webhooks into usable workflows.

### Guide, facilitate, and lead the implementation of a standard, scalable integration experience including discovery, configuration management, and contribution of new integrations

We will be improving the process of contributing and maintaining first-class integrations, with as little overhead as possible, whether you're a GitLab team member building a new integration, a customer, a partner, or a contributor. This may include:

    - Expanding our [Integrations Static DSL](https://gitlab.com/groups/gitlab-org/-/epics/7652), to make it more straightforward for developers to enable new integrations, surface them into our `Project>Settings` UI
    - Establishing a Review Bot for integration activities and supporting where needed on code reviews
    - Providing best practices for authentication, authorization, security (with the support of the security team), rate limiting, and other common challenges encountered in integrations
    - Developing common UI/UX patterns and components 
    - Facilitating cross-functional discussions to drive our overall Product strategy and build an effective ecosystem
    - Providing support for core API and Webhook functionality that integrations depend on

Customers will be able to search across our catalog of integrations that contains useful metadata, making it easier for customers to identify which of their tools they can connect to GitLab. This will help users understand how an integration is maintained, how it's supported, learn how to contribute, and learn about the features and capabilities of an integration.

Once enabled, we intend to make it smoother for users to interact with integrations from the navigation, to enable and manage settings, and by ensuring optimal UX for managing integrations across projects whether using GitLab.com or Self-Managed GitLab.

Areas of configuration we'll want to iterate/improve on are:
- [Enabling up-to-date logos with each integration for Usability](https://gitlab.com/groups/gitlab-org/-/epics/8370)
- [Displaying Integration Status](https://gitlab.com/groups/gitlab-org/-/epics/8469)
- [Troubleshooting tools](https://gitlab.com/groups/gitlab-org/-/epics/8468)
- Establishing Generic UX Settings/Configuration for both Integration Users and Administrators - [Issue 1](https://gitlab.com/gitlab-org/gitlab/-/issues/360001), [Issue 2](https://gitlab.com/groups/gitlab-org/-/epics/6094)
- [Project vs Group Level Configuration](https://gitlab.com/groups/gitlab-org/-/epics/2137)

### Supporting and collaborating with GitLab product teams, partners, customers, and contributors to achieve the top 20 most strategic integrations

During Q4 2022 / Q1 2023, Manage:Integrations will work to shift responsibilities as DRIs of most integrations to individual product teams within the domain areas across GitLab. This will empower product teams to own the comprehensive strategy in their domain, and allow us to best scale to support the need so of our customers.

We will instead redirect our focus to building self-service tools, documentation, guides, best practices, and standards that support our product teams, partners, and contributors to scale the growth of our ecosystem. By positioning our team in the role of a platform team, we believe we can accelerate the process of building and maintaining integrations. We'll also work in a collaboration model to support product teams, help them define their strategy, and execute in a way that best solves for customers and for the business. We'll provide guidance and work to scale that support across product teams so we can achieve our goal of expanding the ecosystem.

Over time, Product Managers in other stages will become owners for integrations that are particular to their domain, giving them full visibility and ownership in serving customers in their domain based on their strategy, as has been the case for many integrations to date (such as SAST/DAST Scanners in Security). Many times, individual groups will have more in-depth knowledge of customer pain points and how integrations should work within their product stage. 

The Alliance team will support in establishing relationships and facilitating the ecosystem expansion with technology partners as owners of those relationships and work more hands-on with product teams in each of the domain areas. The Alliance Partner Integration Engineering (PIE) team, which is being newly assembled, will serve a solutions engineering role in guiding and supporting community contributors. The PIE team will guide any other potential partners in how to establish integrations. This team can and should scale based on the needs and impact of community contributions.

A few guidelines for prioritizing integrations across GitLab:
- We'll have a strong emphasis on partnerships/tools that fill gaps for our product, complement our product, and add value for Enterprise customers. For example, Security & Observability capabilities drive higher value for Enterprise customers.
- As we work to expand our strategic partnerships, we'll prioritize achieving a Lovable state for each integration, with a focus on stability, reliability, performance, and usability, before we prioritize new integrations. This will provide a stable foundation for our ecosystem and allow us to move more quickly on new integrations.

## Integration Ownership (DRAFT)

As we work to better define ownership of integrations across GitLab, this table (in draft) will make it clearer for teams who is responsible for maintenance, security, and new feature development. It will also make it clearer for customers who owns each integration and how deeply it's supported or how much it's being prioritized.

|                                                   Integration                                                   |        Category         |              Owner (Group)              |   Author (Contributor/Maintainer)    |
| --------------------------------------------------------------------------------------------------------------- | ----------------------- | --------------------------------------- | ------------------------------------ |
| [Akismet](https://docs.gitlab.com/ee/integration/akismet.html)                                                  | Spam Protection         | Anti-Abuse:Anti-Abuse                   | GitLab                               |
| [Anchore](https://docs.anchore.com/current/docs/using/integration/ci_cd/gitlab/)                                | Security                | Anti-Abuse:Anti-Abuse                   | Anchore                              |
| [Arkose Protect](https://docs.gitlab.com/ee/integration/arkose.html)                                            | Security                | Anti-Abuse:Anti-Abuse                   | Arkose Protect                       |
| [Asana](https://docs.gitlab.com/ee/user/project/integrations/asana.html)                                        | Project Management      | Plan:Project Management                 | GitLab                               |
| [Assembla]()                                                                                                    | Code Intelligence       | Create:Source Code                      | N/A                                  |
| [Bamboo CI](https://docs.gitlab.com/ee/user/project/integrations/bamboo.html)                                   | CI/CD                   | Verify:Pipeline Execution               | GitLab                               |
| [Bridgecrew](https://docs.bridgecrew.io/docs/integrate-with-gitlab-self-managed)                                | Security                | Secure:Static Analysis                  | GitLab                               |
| [Bugzilla ](https://docs.gitlab.com/ee/user/project/integrations/bugzilla.html)                                 | Project Management      | Plan:Project Management                 | GitLab                               |
| [Buildkite ]()                                                                                                  | CI/CD                   | Verify:Pipeline Execution               | N/A                                  |
| [Campfire]()                                                                                                    | Chat                    | Manage:Integrations                     | N/A                                  |
| [Cloudrail (previously Indeni)](https://docs.cloudrail.app/#/integrations/gitlab)                               | Security                | Secure:Static Analysis                  | GitLab                               |
| [Confluence Workspace](https://docs.gitlab.com/ee/api/integrations.html#confluence-integration)                 | Wiki                    | Create:Editor                           | GitLab                               |
| [Checkmarx ](https://checkmarx.com/why-checkmarx/checkmarx-and-gitlab/)                                         | Security                | Secure:Static Analysis                  | Checkmarx                            |
| [Custom issue tracker](https://docs.gitlab.com/ee/user/project/integrations/custom_issue_tracker.html)          | Project Management      | Plan:Project Management                 | GitLab                               |
| [Datadog](https://docs.gitlab.com/ee/integration/datadog.html)                                                  | Monitoring              | Monitor:Respond                         | DataDog                              |
| [Deepfactor](https://docs.deepfactor.io/hc/en-us/articles/1500008981941)                                        | Security                | Secure:Static Analysis                  | Deepfactor                           |
| [Discord](https://docs.gitlab.com/ee/user/project/integrations/discord_notifications.html)                      | Chat                    | Manage:Integrations                     | GitLab                               |
| [Drone CI]()                                                                                                    | Chat                    | Verify:Pipeline Execution               | GitLab                               |
| [Emails on Push](https://docs.gitlab.com/ee/user/project/integrations/emails_on_push.html)                      | Email                   | Manage:Integrations                     | GitLab                               |
| [Elasticsearch  ](https://docs.gitlab.com/ee/integration/elasticsearch.html)                                    | Data Warehouse & Search | Data Stores:Global Search               | GitLab                               |
| [External Wiki  ]()                                                                                             | Wiki                    | Create:Editor                           | GitLab                               |
| [Flowdock (CA Technologies) ]()                                                                                 | Chat                    | Manage:Integrations                     | GitLab                               |
| [GitHub ](https://docs.gitlab.com/ee/user/project/integrations/github.html)                                     | SCM                     | Create:Source Code                      | GitLab                               |
| [GitPod  ](https://docs.gitlab.com/ee/integration/gitpod.html)                                                  | IDE                     | Create:Editor                           | GitLab                               |
| [Google Chat ](https://docs.gitlab.com/ee/user/project/integrations/hangouts_chat.html)                         | Chat                    | Manage:Integrations                     | GitLab                               |
| [Gmail Actions Buttons](https://docs.gitlab.com/ee/integration/gmail_action_buttons_for_gitlab.html)            | Email                   | Manage:Integrations                     | GitLab                               |
| [GrammaTech](https://www.grammatech.com/codesonar-gitlab-integration)                                           | Security                | Secure:Static Analysis                  | GrammaTech                           |
| [Harbor](https://docs.gitlab.com/ee/user/project/integrations/harbor.html)                                      | Package Management      | Package:Package                         | JiHu                                 |
| [IBM Engineering Workflow Management (EWM)](https://docs.gitlab.com/ee/user/project/integrations/ewm.html)      | Project Management      | Plan:Project Management                 | Community contribution (open source) |
| [Irker](https://docs.gitlab.com/ee/user/project/integrations/irker.html)                                        | Chat                    | Manage:Integrations                     | GitLab                               |
| [Jenkins ](https://docs.gitlab.com/ee/integration/jenkins.html)                                                 | CI/CD                   | Verify:Pipeline Execution               | GitLab                               |
| [JetBrains TeamCity CI ]()                                                                                      | CI/CD                   | Verify:Pipeline Execution               | GitLab                               |
| [Jira ](https://docs.gitlab.com/ee/integration/jira/)                                                           | Project Management      | Plan:Project Management (temporarily supported by Manage:Integrations)                | GitLab                               |
| [JScrambler](https://docs.jscrambler.com/code-integrity/documentation/gitlab-ci-integration)                    | CI/CD                   | Verify:Pipeline Execution               | GitLab                               |
| [Kroki diagrams ](https://docs.gitlab.com/ee/administration/integration/kroki.html)                             | Diagramming             | Plan:Project Management                 | GitLab                               |
| [Mailgun](https://docs.gitlab.com/ee/administration/integration/mailgun.html)                                   | Email                   | Plan:Project Management                 | GitLab                               |
| [Mattermost notifications](https://docs.gitlab.com/ee/user/project/integrations/mattermost.html)                | Chat                    | Manage:Integrations                     | GitLab                               |
| [Mattermost slash commands  ](https://docs.gitlab.com/ee/user/project/integrations/mattermost.html)             | Chat                    | Manage:Integrations                     | GitLab                               |
| [Mend (previously Whitesource)](https://docs.mend.io/bundle/integrations/page/mend_for_gitlab.html)             | Security                | Secure:Static Analysis                  | Mend                                 |
| [Microsoft Teams](https://docs.gitlab.com/ee/user/project/integrations/microsoft_teams.html)                    | Chat                    | Manage:Integrations                     | GitLab                               |
| [Mock CI ](https://docs.gitlab.com/ee/user/project/integrations/mock_ci.html)                                   | CI/CD                   | Verify:Pipeline Execution               | GitLab                               |
| [Packagist]()                                                                                                   | CI/CD                   | Package:Package                         | GitLab                               |
| [Pipeline status emails](https://docs.gitlab.com/ee/user/project/integrations/pipeline_status_emails.html)      | Email                   | Manage:Integrations                     | GitLab                               |
| [Pivotal Tracker  ](https://docs.gitlab.com/ee/user/project/integrations/pivotal_tracker.html)                  | Project Management      | Plan:Project Management                 | GitLab                               |
| [PlantUML](https://docs.gitlab.com/ee/administration/integration/plantuml.html)                                 | Diagramming             | Plan:Project Management                 | GitLab                               |
| [Prometheus](https://docs.gitlab.com/ee/user/project/integrations/prometheus.html)                              | Monitoring              | Monitor:Respond                         | GitLab                               |
| [Pumble](https://docs.gitlab.com/ee/user/project/integrations/pumble.html)                                      | Chat                    | Manage:Integrations                     | Community contribution (open source) |
| [Redmine ](https://docs.gitlab.com/ee/user/project/integrations/redmine.html)                                   | Project Management      | Plan:Project Management                 | Community contribution (open source) |
| [reCAPTCHA ](https://docs.gitlab.com/ee/integration/recaptcha.html)                                             | Spam Protection         | Manage:Authentication and Authorization | GitLab                               |
| [ServiceNow - DevOps / Change Management](https://docs.gitlab.com/ee/user/project/integrations/servicenow.html) | Change Management       | Manage:Integrations                     | ServiceNow                               |
| [Semgrep ](https://semgrep.dev/for/gitlab)                                                                      | Security                | Secure:Static Analysis                  | Semgrep                              |
| [Slack notifications ](https://docs.gitlab.com/ee/user/project/integrations/slack.html)                         | Chat                    | Manage:Integrations                     | GitLab                               |
| [Slack slash commands ](https://docs.gitlab.com/ee/user/project/integrations/slack.html)                        | Chat                    | Manage:Integrations                     | GitLab                               |
| [Slack application ](https://docs.gitlab.com/ee/user/project/integrations/slack.html)                           | Chat                    | Manage:Integrations                     | GitLab                               |
| [Sourcegraph](https://docs.gitlab.com/ee/integration/sourcegraph.html)                                          | Code Intelligence       | Create:Code Review                      | GitLab                               |
| [StackHawk ](https://docs.stackhawk.com/continuous-integration/gitlab.html)                                     | Security                | Secure:Static Analysis                  | StackHawk                            |
| [Tenable](https://docs.tenable.com/tenableio/Content/ContainerSecurity/GetStarted.htm)                          | Security                | Secure:Static Analysis                  | Tenable                              |
| [Trello  ](https://docs.gitlab.com/ee/integration/trello_power_up.html)                                         | Project Management      | Plan:Project Management                 | GitLab                               |
| [Unify Circuit ](https://docs.gitlab.com/ee/user/project/integrations/unify_circuit.html)                       | Chat                    | Manage:Integrations                     | Community contribution (open source) |
| [Venafi ](https://marketplace.venafi.com/details/gitlab-ci-cd/)                                                 | Security                | Secure:Static Analysis                  | Venafi                               |
| [Veracode ](https://community.veracode.com/s/knowledgeitem/gitlab-ci-MCEKSYPRWL35BRTGOVI55SK5RI4A)              | Security                | Secure:Static Analysis                  | Veracode                             |
| [Visual Studio Code extension  ](https://docs.gitlab.com/ee/user/project/repository/vscode.html)                | IDE                     | Create:Code Review                      | GitLab                               |
| [Webex Teams](https://docs.gitlab.com/ee/user/project/integrations/webex_teams.html)                            | Chat                    | Manage:Integrations                     | Community contribution (open source) |
| [Youtrack ](https://docs.gitlab.com/ee/user/project/integrations/youtrack.html)                                 | Project Management      | Plan:Project Management                 | Community contribution (open source) |
| [ZenTao ](https://docs.gitlab.com/ee/user/project/integrations/zentao.html)                                     | Project Management      | Plan:Project Management                 | JiHu                                 |


## Insights 

### Customer Insights

[Top Growth Opportunities](https://docs.google.com/document/d/1RzZpN-_trbyPZu6-vL4YpDW-3PLj_TaRynJMvt6ZzSc/edit?usp=sharing)

### Partner/Ecosystem Insights

- Consider our integration efforts so far. What integrations have been most successful up to this point? [Jira, Slack, Prometheus](https://app.periscopedata.com/app/gitlab/577690/Integrations-Usage-Dashboard). Why? Our hypothesis is that they serve larger Enterprises with real, complex challenges that would be valuable to solve. These Enterprises have many users that are trying to follow standard processes, using standard tools chosen by their org.
- Secondarily, these partners (Atlassian, Slack) have large CSMs - they work with mutual customers and prospects that could gain value from pairing their products with GitLab.

### GitLab Values & Product Principles

- [Prioritize relentlessly](https://about.gitlab.com/handbook/product/product-principles/#our-product-principles). It is better to do a few things well than many things poorly. We should focus first on what we're best at and what our customers need most, with a preference for simplicity. Customers will tell us when we're missing something they need, but they’re unlikely to tell us when we're overwhelming them with unwanted features.
- By defining a concrete [product strategy](https://www.youtube.com/watch?v=x4H_gluZI10) for our team, we can narrow down the opportunities we choose to invest in and make the most impact. Once the strategy is well defined, prioritization becomes much more straightforward.

## Key Objectives

Based on our Vision/Strategy, we will follow and track the following key objectives to identify if our Strategy is effective:

* Total API/webhook usage
* \# of community contributions (based on improvements to our API strategy and integration experience), especially new integrations or integration features contributed
* \# of total lovable integrations
* ARR / # of Integrations
* Total CMAU
* Deal Blockers - Track Opportunities Won where an Integration is cited by customer as a key requirement
* [Customer Churn](https://www.crossbeam.com/blog/tech-ecosystem-maturity-track-churn-and-youre-3-6x-more-likely-to-have-dedicated-budget-for-integrations/) - Overall Customer Churn should decrease as we increase the stickiness of our product via our Ecosystem
* New Revenue through Partnerships

## Maturity

The Integrations group tracks [Maturity](/direction/maturity/)
on a per-integration basis. Each integration is evaluated based on the following
criteria:

* A **Minimal** integration meets a single basic need for a small set of customers, and may only push data one way from one system to the other without surfacing much data or functionality directly in the UI.
* A **Viable** integration meets the core needs of most customers, and is robust or configurable enough to meet all the needs of some customers.
* A **Complete** integration meets the needs of the vast majority of usecases for the majority of users, and the integration allows users to work painlessly between the two products.
* A **Lovable** integration not only meets the needs of the vast majority of users, but it makes the experience of using both products as productive and easy as possible. This may mean things like special consideration taken to intra-product navigation and how we surface notifications from the other service, for example.

## Current High-priority Integrations

_You can view a list of all of our current integrations on our [Integrations page](https://docs.gitlab.com/ee/user/project/integrations/overview.html)_

| Integration           | Maturity Level      | Documentation                                                                               | Issues / Planning Epic    |
| ---                   | ---                 | ---                                                                                         | --- |
| Webhooks              | Viable              | [Documentation](https://docs.gitlab.com/ee/user/project/integrations/webhooks.html)         | [Open Issues](https://gitlab.com/groups/gitlab-org/-/issues?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=Integration%3A%3Awebhooks) |
| Atlassian Jira        | Viable              | [Documentation](https://docs.gitlab.com/ee/integration/jira/)             | [Open Issues](https://gitlab.com/gitlab-org/gitlab/-/issues?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=Integration%3A%3AJira) |
| Slack                 | Viable              | [Documentation](https://docs.gitlab.com/ee/user/project/integrations/slack.html)            | [Open Issues](https://gitlab.com/gitlab-org/gitlab/-/issues?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=Integration%3A%3ASlack) |
| ServiceNow            | Minimal             | [Documentation](https://docs.gitlab.com/ee/user/project/integrations/servicenow.html)       | [Epic](https://gitlab.com/groups/gitlab-org/-/epics/1712) |
| Microsoft Teams       | Minimal             | [Documentation](https://docs.gitlab.com/ee/user/project/integrations/microsoft_teams.html)  | [Epic](https://gitlab.com/groups/gitlab-org/-/epics/880) |


## What's next and why

<%= partial("direction/manage/integrations/templates/next") %>



## What we're not doing

<%= partial("direction/manage/integrations/templates/not_doing") %>


## Contributing

This group develops and maintains specific integrations inside the GitLab codebase, but that doesn't preclude you and your team from adding your own. At GitLab, one of our values is that everyone can contribute. If you're looking to contribute your own integration, or otherwise get involved with features in the Integrations area, [you can find open issues here](https://gitlab.com/groups/gitlab-org/-/issues?scope=all&state=opened&label_name[]=group%3A%3Aintegrations).

Feel free to reach out to the team directly if you need guidance or want
feedback on your work by using the ~"group::integrations" label on your open merge requests.

You can read more about our general contribution guidelines [here](https://gitlab.com/gitlab-org/gitlab/-/blob/master/CONTRIBUTING.md).

## Partnership

If your company is interested in partnering with GitLab, check out the [Partner with GitLab](https://about.gitlab.com/partners/integrate/) page for more info.

## Integration design guidelines

Special considerations apply to integrations that don't apply to building native functionality. The product handbook [has a set of recommendations and guidelines](/handbook/product/product-principles/#integrate-other-applications-thoughtfully) to consider when working on these types of projects.

## Influences

We're inspired by other companies with rich, developer-friendly experiences like [Salesforce](https://developer.salesforce.com/), [Shopify](https://help.shopify.com/en/api/getting-started), [Twilio](https://www.twilio.com/docs/), [Stripe](https://stripe.com/docs/development), and [GitHub](https://developer.github.com/).

A large part of the success of these companies comes from their enthusiasm around enabling developers to integrate, extend, and interact with their services in new and novel ways, creating a spirit of [collaboration](https://about.gitlab.com/handbook/values/#collaboration) and [diversity](https://about.gitlab.com/handbook/values/#diversity-inclusion) that simply can't exist any other way.

## Feedback & Requests

_This direction is constantly evolving, and [everyone can contribute](#contributing):_

* Please comment, thumbs-up (or down!), and contribute to the linked issues and epics on this group page. Sharing your feedback directly on GitLab.com is the best way to contribute to our vision.
* If there's an integration that you'd like to see GitLab offer, please [submit an issue](https://gitlab.com/gitlab-org/gitlab/-/issues/new?issue) with the label `~"group::integrations"` on any relevant issues.
* Feel free to mention the Manage:Integrations PM [@g.hickman](https://gitlab.com/g.hickman) for visibility. If you're a GitLab user and have direct
  knowledge of your need from a particular integration, we'd love to hear from you.
