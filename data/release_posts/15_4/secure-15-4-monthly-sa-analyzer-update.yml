---
features:
  secondary:
  - name: "Static Analysis analyzer updates"
    available_in: [core, premium, ultimate]
    documentation_link: 'https://docs.gitlab.com/ee/user/application_security/sast/analyzers'
    reporter: connorgilbert
    stage: secure
    categories:
    - SAST
    - Secret Detection
    issue_url: 'https://gitlab.com/gitlab-org/gitlab/-/issues/370389#new-monthly-analyzer-updates'
    description: |
        GitLab Static Analysis includes [many security analyzers](https://docs.gitlab.com/ee/user/application_security/sast/#supported-languages-and-frameworks) that the GitLab Static Analysis team actively manages, maintains, and updates. The following analyzer updates were published during the 15.4 release milestone. These updates bring additional coverage, bug fixes, and improvements.

        - Kics analyzer updated to add additional rules, fix bugs, and update to kics version 1.5.13. See [CHANGELOG](https://gitlab.com/gitlab-org/security-products/analyzers/kics/-/blob/main/CHANGELOG.md#v320) for details.
        - NodeJSScan analyzer updated to version 0.3.3. See [CHANGELOG](https://gitlab.com/gitlab-org/security-products/analyzers/nodejs-scan/-/blob/master/CHANGELOG.md#v320) for details.
        - Security Code Scan analyzer updated to version 5.6.5. See [CHANGELOG](https://gitlab.com/gitlab-org/security-products/analyzers/security-code-scan/-/blob/master/CHANGELOG.md#v360) for details.
        - Semgrep analyzer updated to version 0.110.0. See [CHANGELOG](https://gitlab.com/gitlab-org/security-products/analyzers/semgrep/-/blob/main/CHANGELOG.md#v360) for details.
            - You can now set the Semgrep `--max-memory` flag by using the new [`SAST_SCANNER_ALLOWED_CLI_OPTS` CI/CD variable](https://docs.gitlab.com/ee/user/application_security/sast/#security-scanner-configuration). This variable accepts a limited set of options and passes them through to the underlying scanner.
        - Secrets analyzer updated. See [CHANGELOG](https://gitlab.com/gitlab-org/security-products/analyzers/secrets/-/blob/master/CHANGELOG.md#v432) for details.
            - We've fixed a bug that caused a historic scan to be run if the `SECRET_DETECTION_HISTORIC_SCAN` CI/CD variable was set at all, regardless of the variable's value.
            - We've added a rule to detect leaked [GitLab Pipeline Trigger Tokens](https://docs.gitlab.com/ee/ci/triggers/).
        - SpotBugs analyzer updated to use 'assemble' task for Gradle projects. See [CHANGELOG](https://gitlab.com/gitlab-org/security-products/analyzers/spotbugs/-/blob/master/CHANGELOG.md#v325) for details. We thank community contributor [`@sbrochet`](https://gitlab.com/sbrochet) for making this improvement.

        If you [include the GitLab-managed SAST template](https://docs.gitlab.com/ee/user/application_security/sast/#configure-sast-manually) ([`SAST.gitlab-ci.yml`](https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/SAST.gitlab-ci.yml)), you don't need to do anything to receive these updates. However, if you override or customize your own CI/CD template, you need to update your CI/CD configurations.

        To remain on a specific version of any analyzer, you can [pin to a minor version of an analyzer](https://docs.gitlab.com/ee/user/application_security/sast/#pinning-to-minor-image-version). Pinning to a previous version prevents you from receiving automatic analyzer updates and requires you to manually bump your analyzer version in your CI/CD template.

        For previous changes, see [last month's updates](https://about.gitlab.com/releases/2022/08/22/gitlab-15-3-released/#static-analysis-analyzer-updates).
