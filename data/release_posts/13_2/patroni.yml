features:
  secondary:
    - name: "Patroni available as experimental alternative to repmgr"
      available_in: [core, starter, premium, ultimate]
      gitlab_com: false
      reporter: ljlane
      stage: systems
      categories:
        - "Omnibus Package"
      issue_url: 'https://gitlab.com/groups/gitlab-org/-/epics/2588'
      documentation_link: 'https://docs.gitlab.com/ee/administration/postgresql/replication_and_failover.html#patroni'
      description: |
        For self-managed GitLab installations, Patroni is now available as an alternative PostgreSQL replication and failover solution. Patroni brings improvements over repmgr, which it replaces. With Patroni, a failed primary is automatically added back to the cluster as a standby node when it comes back online. The addition of Patroni also unblocks us from adding support for PostgreSQL 12, and supporting PostgreSQL replication and failover on a Geo secondary site. Use of Patroni with Geo is currently being tested and is not yet supported. This switch supports GitLab's goals to dogfood our solutions. Gitlab.com has been using Patroni to [manage failover since 2018](https://about.gitlab.com/blog/2018/12/05/availability-postgres-patroni/), making it a well tested solution. Repmgr will continue to be available in Omnibus GitLab until GitLab 14.0. For instructions on setting up Patroni, which is currently experimental, see GitLab's [Patroni documentation](https://docs.gitlab.com/ee/administration/postgresql/replication_and_failover.html#patroni).
