features:
  secondary:
    - name: "PostgreSQL 12 availability"
      available_in: [core, starter, premium, ultimate]
      gitlab_com: false
      reporter: ljlane
      stage: systems
      categories:
        - 'Omnibus Package'
        - 'Cloud Native Installation'
      epic_url: 'https://gitlab.com/groups/gitlab-org/-/epics/2374'
      documentation_link: 'https://docs.gitlab.com/omnibus/update/gitlab_13_changes.html#postgresql-123-support'
      description: |
        In GitLab 13.3, [initial compatibility with PostgreSQL 12 was launched](https://about.gitlab.com/releases/2020/08/22/gitlab-13-3-released/#postgresql-12-is-now-available), and it became available as an opt-in version in self-managed GitLab.

        With GitLab 13.5, PostgreSQL 12 is now fully supported, including on deployments with Geo and PostgreSQL clusters. To use PostgreSQL 12 in a cluster, you **must** use Patroni for replication and failover. Using repmgr for replication and failover is not supported with PostgreSQL 12. For information on migrating from repmgr to Patroni, see [Switching from repmgr to Patroni](https://docs.gitlab.com/ee/administration/postgresql/replication_and_failover.html#switching-from-repmgr-to-patroni). For instructions on upgrading PostgreSQL in a Patroni cluster, see [Upgrading PostgreSQL major version in a Patroni cluster](https://docs.gitlab.com/ee/administration/postgresql/replication_and_failover.html#upgrading-postgresql-major-version-in-a-patroni-cluster). Note that major PostgreSQL version upgrades in a Patroni cluster require downtime.

        PostgreSQL 12 will [become the default version for new GitLab installations in 13.6](https://gitlab.com/groups/gitlab-org/-/epics/3835). For upgrades of existing GitLab deployments it will become the default version in 13.7 with the option to opt out and stay on PostgreSQL 11.
